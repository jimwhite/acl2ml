((/taspi/sets-input/consensus.lisp::collect-when-size-is-at-least-cutoff (nil nil nil nil (if) nil nil) ((nil) nil (atom) (let) nil nil nil) ((term-count-alist (element (car term-count-alist))) nil nil nil (if) nil nil) (nil nil nil (>= cons recursive-call) nil nil nil) ((cutoff cutoff) nil (rfix car cdr) (recursive-call) nil nil nil) ((element cutoff term-count-alist) nil (cdr cdr) nil nil nil nil) ((element term-count-alist) nil nil nil nil nil nil)) (/taspi/sets-input/consensus.lisp::compute-consensus-helper (nil nil nil (let*) nil nil nil) (nil nil ((cutoff (ceiling (* number-of-trees percentage) 100))) nil (if) nil nil) (nil nil (bio-majority quote) (and build-term-top) nil nil nil) ((bio-majority taxa-list invalid-bfringes) nil (not) (collect-when-size-is-at-least-cutoff subset-list) nil nil nil) ((bfringe-frequencies cutoff taxa-list) nil nil (member-gen btrees-to-fringes) nil nil nil) ((nil bio-majority bio-majority) nil (build-taxa-list-tree) nil nil nil nil) ((taxa-list) nil nil nil nil nil nil)) (/taspi/sets-input/consensus.lisp::compute-consensus (nil nil nil (let) nil nil nil) (nil nil ((bfringe-frequencies (bfringe-frequencies list-of-trees taxa-list))) nil nil (compute-consensus-helper) nil) ((bfringe-frequencies taxa-list num-trees percentage) nil (num-trees) nil nil nil nil) (nil nil (len) nil nil nil nil) ((list-of-trees) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/consensus.lisp::compute-consensus-brlens (nil nil nil (let) nil nil nil) (((trees-no-brlens (remove-brlens-list list-of-trees))) nil nil nil (if) nil nil) (nil nil (quote) nil (compute-consensus) nil nil) ((trees-no-brlens taxa-list percentage bad-input-trees-to-consensus) nil (non-tip-tree-listp int-symlist all-same-num-tips integerp) (<= <) nil nil nil) ((trees-no-brlens taxa-list trees-no-brlens percentage percentage) (2 0) (len) nil nil nil nil) ((taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/consensus.lisp::compute-frequencies (nil nil nil nil (let*) nil nil) ((bio-ans) nil (declare) nil nil nil nil) (nil nil (dbterms void ta bfringe-frequencies1 void1 void2 bio-ans void3) nil nil (ignore) nil) ((void void1 void2 void3) nil (flush-hons-get-hash-table-link flush-hons-get-hash-table-link flush-hons-get-hash-table-link flush-hons-get-hash-table-link) (hshrink-alist build-fast-alist-from-alist hshrink-alist) nil (bfringe-frequencies1) nil) ((replete-trees-list-top replete-trees-list-top dbterms dbterms ta dbterms ta bfringe-frequencies1 bfringe-frequencies1) nil (quote taxa-list-to-tree-alist quote quote quote) nil nil nil nil) ((replete-database taxa-list taxa-tree-alist the-bfringe-frequencies1 bio-ans) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/consensus.lisp::compute-frequencies-brlens (nil nil nil (let) nil nil nil) (((trees-no-brlens (remove-brlens-list list-of-trees))) nil nil nil (if) nil nil) (nil nil (quote) (compute-frequencies) nil (and) nil) ((trees-no-brlens taxa-list bad-input-trees-to-compute-frequencies) nil (non-tip-tree-listp int-symlist all-same-num-tips) (<=) nil nil nil) ((trees-no-brlens taxa-list trees-no-brlens) (2) (len) nil nil nil nil) ((taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))