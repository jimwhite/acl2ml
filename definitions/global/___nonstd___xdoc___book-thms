((/nonstd/xdoc/book-thms.lisp::newly-defined-top-level-thms-rec (nil nil nil nil nil nil (cond)) (nil nil ((endp trips) (and (eq (caar trips) (quote include-book-path)) (eq (cadar trips) (quote global-value))) (not collect-p) (eq (cadar trips) (if translated-p (quote theorem) (quote untranslated-theorem))) t) nil nil nil nil) ((acc) nil nil nil nil nil (recursive-call recursive-call recursive-call recursive-call)) ((full-book-name acc translated-p nil full-book-name acc translated-p collect-p full-book-name translated-p collect-p full-book-name acc translated-p) nil (cdr cdr cdr cdr) (equal) (acons) nil nil) ((trips full-book-name trips trips acc trips) nil (car caar cddar) nil nil nil nil) ((trips trips) nil (cddar) nil nil nil nil) ((trips) nil nil nil nil nil nil)) (/nonstd/xdoc/book-thms.lisp::reversed-world-since-event (nil nil nil (cond) nil nil nil) (nil nil ((or (endp wrld) (let ((trip (car wrld))) (and (eq (car trip) (quote event-landmark)) (eq (cadr trip) (quote global-value)) (equal (access-event-tuple-form (cddr trip)) ev)))) t) nil nil nil nil) ((acc) nil nil nil (recursive-call) nil nil) ((ev) nil (cdr) (cons) nil nil nil) ((wrld acc) nil (car) nil nil nil nil) ((wrld) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/xdoc/book-thms.lisp::reversed-world-since-boot-strap (nil nil nil nil (reversed-world-since-event) nil nil) ((wrld nil) nil (quote) nil nil nil nil) ((exit-boot-strap-mode) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/xdoc/book-thms.lisp::book-thms-fn (nil nil nil nil nil (mv-let) nil) (nil nil (declare) (full-book-name) nil nil (parse-book-name newly-defined-top-level-thms-rec)) ((directory-name familiar-name cbd book-name .lisp state nil full-book-name nil translated-p) nil (quote reversed-world-since-boot-strap) (ignore) nil nil nil) ((book-thms directory-name familiar-name) nil (w) nil nil nil nil) ((state) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/xdoc/book-thms.lisp::theorems-introduced-in (nil nil (strip-cars) nil nil nil nil) (nil nil nil nil (book-thms-fn) nil nil) ((book-name t state) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/xdoc/book-thms.lisp::new-formula-info (nil nil nil (cond) nil nil nil) (nil nil ((endp trips) t) nil nil nil nil) ((acc) nil nil nil (recursive-call) nil nil) ((wrld) nil (cdr) (let) nil nil nil) ((trips) nil ((name (caar trips))) nil nil nil nil) (nil nil (prop cadar theorem unnormalized-body constraint-lst defchoose-axiom t) nil nil nil nil) ((trips acc) nil (cddar) (cons cond cond cons) nil nil nil)))