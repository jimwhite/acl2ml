((/textbook/chap11/qsort.lisp::less (nil nil nil nil (cond) nil nil) (nil nil ((atom lst) (< (car lst) x) t) nil nil nil nil) ((nil) nil nil (cons recursive-call) nil nil nil) ((x) nil (car cdr) (recursive-call) nil nil nil) ((lst x lst) nil (cdr) nil nil nil nil) ((lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/qsort.lisp::notless (nil nil nil nil (cond) nil nil) (nil nil ((endp lst) (< (car lst) x) t) nil nil nil nil) ((nil) nil nil (recursive-call cons) nil nil nil) ((x) nil (cdr car) (recursive-call) nil nil nil) ((lst lst x) nil (cdr) nil nil nil nil) ((lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/qsort.lisp::qsort (nil nil nil (cond) nil nil nil) (nil nil ((atom x) t) nil nil nil nil) ((nil) nil nil nil (append) nil nil) (nil nil (recursive-call list recursive-call) nil nil nil nil) (nil nil (car) (less notless) nil nil nil) ((x) nil (car cdr car cdr) nil nil nil nil) ((x x x x) nil nil nil nil nil nil)) (/textbook/chap11/qsort.lisp::lessp (nil nil nil nil (if) nil nil) ((t) nil (endp) (and) nil nil nil) ((lst) nil nil (< recursive-call) nil nil nil) ((x x) nil (car cdr) nil nil nil nil) ((lst lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/qsort.lisp::notlessp (nil nil nil nil (if) nil nil) ((t) nil (endp) (and) nil nil nil) ((lst) nil (not) (recursive-call) nil nil nil) ((x) nil (cdr) (<) nil nil nil) ((x lst) nil (car) nil nil nil nil) ((lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/qsort.lisp::orderedp (nil nil nil nil (if) nil nil) ((t) nil nil (or and) nil nil nil) (nil nil (endp endp recursive-call) (<=) nil nil nil) ((lst) nil (cdr car cadr cdr) nil nil nil nil) ((lst lst lst lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))