((/concurrent-programs/bakery/properties-of-sets.lisp::my-subsetp (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((x) nil nil (memberp recursive-call) nil nil nil) ((y y) nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties-of-sets.lisp::previous (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (if) nil nil) ((x nil) nil nil (equal cons) nil nil nil) ((i) nil (first first) (recursive-call) nil nil nil) ((x x i) nil (rest) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties-of-sets.lisp::intersect (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (if) nil nil) ((x) nil nil (memberp cons recursive-call) nil nil nil) ((y y) nil (first first rest) (recursive-call) nil nil nil) ((x x y x) nil (rest) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties-of-sets.lisp::disjoint (nil nil (not) nil nil nil nil) (nil nil nil (intersect) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))