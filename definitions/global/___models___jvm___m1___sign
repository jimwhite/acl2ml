((/models/jvm/m1/sign.lisp::ok-inputs (nil nil (integerp) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/sign.lisp::theta (nil nil nil nil (if) nil nil) (nil (-1) nil (<) (if) nil nil) ((n) (0 0 1) nil (equal) nil nil nil) ((n) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/sign.lisp::helper (nil nil nil nil (if) nil nil) (nil nil (quote) nil (and if) nil nil) ((illegal) nil (integerp integerp) (or equal) (if if) nil nil) ((n m n) (0 0 1 -1) (natp natp) (equal equal recursive-call) nil nil nil) ((n m m m) (0 0) nil (- -) nil nil nil) ((n m) (1 1) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/sign.lisp::fn (nil nil nil (helper) nil nil nil) ((n) nil nil (*) nil nil nil) ((n) (-1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/sign.lisp::loop-clk (nil nil nil (cond) nil nil nil) (nil nil ((and (integerp n) (integerp m) (or (natp n) (natp m))) t) nil nil nil nil) ((nil) nil nil nil (cond) nil nil) (nil nil ((equal n 0) (equal m 0) t) nil nil nil nil) (nil (6 5) nil (clk+) nil nil nil) (nil (13) nil (recursive-call) nil nil nil) (nil nil nil (- -) nil nil nil)) (/models/jvm/m1/sign.lisp::clk (nil nil nil (clk+) nil nil nil) (nil (4) nil (loop-clk) nil nil nil) ((n) nil (-) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))