((/taspi/tree-score/efficient-pscores.lisp::min-list (nil nil nil nil (if) nil nil) ((curMin) nil (atom) (recursive-call) nil nil nil) ((list) nil (cdr) (min-nil-inf) nil nil nil) ((list curMin) nil (car) nil nil nil nil) ((list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::sum-list (nil nil nil nil (if) nil nil) ((nil) nil (atom) (hons) nil nil nil) ((l1) nil nil (plus-nil-inf recursive-call) nil nil nil) (nil nil (car car cdr cdr) nil nil nil nil) ((l1 l2 l1 l2) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::sum-list-top (nil nil nil (sum-list) nil nil nil) ((l1 l2) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::scorelist-sum-list (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((l1) nil nil (sum-list-top recursive-call) nil nil nil) (nil nil (car car cdr cdr) nil nil nil nil) ((l1 l2 l1 l2) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::sum-minima-helper (nil nil nil nil (if) nil nil) ((curSum) nil (atom) (recursive-call) nil nil nil) ((scorelist) nil (cdr) (plus-nil-inf) nil nil nil) ((scorelist curSum) nil nil (min-list) nil nil nil) (nil (-1) (car) nil nil nil nil) ((scorelist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::sum-minima (nil nil nil (sum-minima-helper) nil nil nil) ((scorelist) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::make-leaf-score-list (nil nil nil nil (if) nil nil) ((nil) nil (atom) (let) nil nil nil) ((seq (scoreList (het (car seq) cssl-map))) nil nil (cons) nil nil nil) (nil nil (cdr) (recursive-call) nil nil nil) ((scoreList cssl-map) nil (cdr) nil nil nil nil) ((seq) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::find-smallest-addition (nil nil nil nil (if) nil nil) (nil (-1) (atom) (min-nil-inf) nil nil nil) ((curList) nil nil (plus-nil-inf recursive-call) nil nil nil) (nil nil (car car cdr cdr) nil nil nil nil) ((curList translist curList translist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::raise-score-to-parent (nil nil nil nil (if) nil nil) ((nil) nil (atom) (hons) nil nil nil) ((matrix-lists) nil nil (find-smallest-addition recursive-call) nil nil nil) ((child child) nil (car cdr) nil nil nil nil) ((matrix-lists matrix-lists) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::raise-scorelist-to-parent (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((child) nil nil (raise-score-to-parent recursive-call) nil nil nil) ((matrix-lists matrix-lists) nil (car cdr) nil nil nil nil) ((child child) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::make-sequence-score-lists (nil nil nil nil (if) nil nil) ((alist) nil (atom) nil (recursive-call) nil nil) ((sequences cssl-map) nil (cdr) nil (hut) nil nil) ((sequences alist) nil (caar) (make-leaf-score-list) nil nil nil) ((sequences cssl-map) nil (cdar) nil nil nil nil) ((sequences) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::pscore-tree-helper (nil nil nil (let) nil nil nil) (((scores (score-tree-and-sequences tree sequence-score-lists matrix-lists))) nil nil nil (if) nil nil) ((Error: Needed good scores from score-tree-and-sequences) nil (small-integer-list-listp sum-minima) nil nil nil nil) ((scores scores) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::pscore-tree (nil nil nil (let*) nil nil nil) (nil nil ((sequence-score-lists (make-sequence-score-lists sequences cssl-map (quote make-sequence-score-lists)))) nil (if) nil nil) ((Error: Need good sequences and matrix in pscore-tree) nil (matrix-lists) nil (and pscore-tree-helper) nil nil) ((tree sequence-score-lists matrix-lists) nil (strip-cdrs-gen map-to-small-integer-list-listp small-integer-list-listp) (good-len-lists-mapping) nil nil nil) ((matrix sequence-score-lists sequence-score-lists matrix-lists matrix-lists) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::pscore-trees-helper (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((trees) nil nil nil (pscore-tree-helper recursive-call) nil nil) ((sequence-score-lists matrix-lists sequence-score-lists matrix-lists) nil (car cdr) nil nil nil nil) ((trees trees) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::pscore-trees (nil nil nil (let*) nil nil nil) (nil nil ((sequence-score-lists (make-sequence-score-lists sequences cssl-map (quote make-sequence-score-lists)))) nil (if) nil nil) ((Error: Need good sequences and matrix in pscore-trees) nil (matrix-lists) nil (and pscore-trees-helper) nil nil) ((trees sequence-score-lists matrix-lists) nil (strip-cdrs-gen map-to-small-integer-list-listp small-integer-list-listp) (good-len-lists-mapping) nil nil nil) ((matrix sequence-score-lists sequence-score-lists matrix-lists matrix-lists) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::make-default-costlist (nil nil nil nil (if) nil nil) ((nil) nil (atom) (hons) nil nil nil) ((alphabet) nil nil nil (if recursive-call) nil nil) ((cost currstate cost) (0) (cdr) (equal) nil nil nil) ((currstate alphabet) nil (car) nil nil nil nil) ((alphabet) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::make-default-cmat (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((alphabet) nil nil (cons) (recursive-call) nil nil) ((whole cost) nil (car cdr) nil (make-default-costlist) nil nil) ((alphabet whole cost alphabet) nil (car) nil nil nil nil) ((alphabet) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores.lisp::make-default-cost-matrix (nil nil nil nil (make-default-cmat) nil nil) ((alphabet alphabet cost) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))