((/clause-processors/SULFA/books/clause-processors/sym-str.lisp::concat-str-macro (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((lst) nil (consp car) (cons) nil nil nil) ((lst) nil (cdr quote) (cons) nil nil nil) ((lst concatenate) nil (quote) (cons) nil nil nil) (nil nil (quote car) (cons) nil nil nil) ((string lst) nil (recursive-call quote) nil nil nil nil)) (/clause-processors/SULFA/books/clause-processors/sym-str.lisp::symbol-from-sym-str (nil nil nil (intern) nil nil nil) ((ACL2) nil nil (concat-str) nil nil nil) ((str) nil (string) nil nil nil nil) ((sym) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/clause-processors/SULFA/books/clause-processors/sym-str.lisp::symbol-from-str-num (nil nil nil (intern) nil nil nil) ((ACL2) nil nil (concat-str) nil nil nil) ((str) nil nil (coerce) nil nil nil) (nil nil (quote) (explode-atom) nil nil nil) ((n string) (10) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))