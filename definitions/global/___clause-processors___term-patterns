(nil (/clause-processors/term-patterns.lisp::fn-pats (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((fns) nil (fn-pat recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((fns fns) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/clause-processors/term-patterns.lisp::pseudo-term-val-alistp (nil nil nil nil (if) nil nil) (nil nil (atom) (eq) (and) nil nil) ((x x nil) nil (consp pseudo-termp recursive-call) nil nil nil nil) (nil nil (car cdar cdr) nil nil nil nil) ((x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/clause-processors/term-patterns.lisp::match-term-pattern (nil nil nil nil (if) nil nil) ((nil) nil (atom) (or) nil nil nil) ((pats) nil nil (recursive-call) (term-pattern-match) nil nil) ((x x) nil (car quote cdr) nil nil nil nil) ((pats (& . &) pats) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/clause-processors/term-patterns.lisp::term-matches (nil nil nil (match-term-pattern) nil nil nil) ((term) nil (cdr) nil nil nil nil) (nil nil nil (assoc) nil nil nil) ((name) nil nil (table-alist) nil nil nil) ((world) nil (quote) nil nil nil nil) ((term-patterns) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))