((/centaur/misc/smm-impl.lisp::smme-sizes-okp (nil nil nil nil (and) nil nil) (nil nil nil (< <= <=) nil nil nil) (nil nil (lnfix smme-blockstarts-length lnfix smme-blocksizes-length lnfix smme-mem-length) nil nil nil nil) ((smme smme smme) nil (smme-nblocks smme-nblocks) (smme-blockstartsi) nil nil nil) ((smme smme smme) nil (smme-nblocks) nil nil nil nil) ((smme) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smme-blocks-wfp (nil nil nil (or) nil nil nil) (nil nil (zp) (and) nil nil nil) ((n) nil nil (int= recursive-call) nil nil nil) ((smme) nil (1-) (smme-block-start +) nil nil nil) ((n smme n) nil nil (smme-block-start smme-block-size) nil nil nil) ((smme smme) nil (1- 1-) nil nil nil nil) ((n n) nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smme-wfp (nil nil nil nil (and) nil nil) (nil nil (smme-sizes-okp) (int= smme-blocks-wfp) nil nil nil) ((smme smme) (0) (smme-nblocks) (smme-block-start) nil nil nil) ((smme smme) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smme-mem-clear (nil nil nil nil (if) nil nil) ((smme) nil nil (let) nil (mbe) nil) ((:logic :exec (smme (update-smme-memi n val smme))) nil (zp) (int=) nil (recursive-call) nil) ((max n max val smme) nil nil (- +) nil nil nil) (nil (1) (nfix nfix lnfix) nil nil nil nil) ((max n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smme-addblock (nil nil nil (b*) nil nil nil) ((smme) nil nil nil nil nil nil) (nil nil (nstart smme smme nsz nextfree smme smme smme smme smme) nil nil nil nil) (nil nil (lnfix) (smme-block-start smme-maybe-resize-sizes smme-maybe-resize-starts + smme-maybe-resize-mem update-smme-nblocks) (update-smme-blockstartsi update-smme-blocksizesi) (smme-mem-clear) nil) ((n smme n smme smme sz nsz nstart nextfree smme smme nextfree smme n nsz smme nstart nextfree smme) (0) nil (+ + +) nil nil nil) ((n n n) (1 1 1) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::u32-list-listp (nil nil nil nil (if) nil nil) (nil nil (atom) (eq and) nil nil nil) ((x x nil) nil (u32-listp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smmlp (nil nil (u32-list-listp) nil nil nil nil) ((smm) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smml-create ((nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smml-block-start-alt-ind (nil nil nil nil (if) nil nil) ((smm) nil (zp) (recursive-call) nil nil nil) ((n smm) nil (1-) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/smm-impl.lisp::smme-nextfree (nil nil nil (smme-block-start) nil nil nil) ((smme) nil (smme-nblocks) nil nil nil nil) ((smme) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))