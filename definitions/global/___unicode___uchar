((/unicode/uchar.lisp::ustring? (nil nil nil nil (if) nil nil) (nil nil (atom null) (and) nil nil nil) ((x x) nil (uchar? recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/unicode/uchar.lisp::ustring=>charlist (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((x) nil (uchar=>char recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/unicode/uchar.lisp::ascii (nil nil nil (coerce) nil nil nil) (nil nil (ustring=>charlist quote) nil nil nil nil) ((x string) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/unicode/uchar.lisp::charlist=>ustring (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((x) nil (char-code recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/unicode/uchar.lisp::ustring (nil nil (charlist=>ustring) nil nil nil nil) (nil nil nil (coerce) nil nil nil) ((x) nil (quote) nil nil nil nil) ((list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))