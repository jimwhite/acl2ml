((/misc/fibonacci.lisp::fib-general (nil nil nil nil nil nil nil) (nil nil ((zp n) (equal n 0) (equal n 1) (equal n 2) (< 2 n) t) nil nil nil nil) ((x y nil) (0 0) nil nil (recursive-call) nil nil) ((y) nil nil (+ +) nil nil nil) ((x y n) (-1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/fibonacci.lisp::fib (nil nil nil nil nil (cond) nil) (nil nil ((zp n) (equal n 0) (equal n 1) t) nil nil nil nil) (nil (0 0 1) nil (+) nil nil nil) (nil nil (recursive-call recursive-call) nil nil nil nil) (nil nil nil (- -) nil nil nil) ((n n) (1 2) nil nil nil nil nil) (nil nil nil nil nil nil nil)))