((/countereg-gen/random-state-basis1.lisp::getseed (nil nil nil nil (if) nil nil) (nil (0) nil (f-boundp-global b*) nil nil nil) ((state (s (@ random-seed))) nil (quote) nil (if) nil nil) ((random-seed) (0) nil (unsigned-byte-p the) nil nil nil) ((s s) (31) (unsigned-byte) nil nil nil nil) (nil (31) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/countereg-gen/random-state-basis1.lisp::genrandom (nil nil (declare) nil nil nil nil) (nil nil nil (xargs) nil nil nil) ((:guard) nil nil nil (and) nil nil) (nil nil (posp) (unsigned-byte-p unsigned-byte-p) nil nil nil) ((seed. max max) (31 31) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/countereg-gen/random-state-basis1.lisp::genrandom-state (nil nil (declare) nil nil nil nil) (nil nil nil nil nil (xargs) nil) ((:stobjs state :guard) nil nil (and) nil nil nil) (nil nil (posp) (unsigned-byte-p) nil nil nil) ((max max) (31) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))