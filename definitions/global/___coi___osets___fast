((/coi/osets/fast.lisp::fast-measure (nil nil nil (+) nil nil nil) (nil nil (acl2-count acl2-count) nil nil nil nil) ((X Y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/osets/fast.lisp::fast-union (nil nil nil nil nil nil (cond)) (nil nil ((empty X) (empty Y) (equal (head X) (head Y)) (<< (head X) (head Y)) t) nil nil nil nil) ((Y X) nil nil (cons cons cons) nil nil nil) (nil nil (head head head) (recursive-call recursive-call recursive-call) nil nil nil) ((X X Y Y X) nil (tail tail tail tail) nil nil nil nil) ((X Y X Y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/osets/fast.lisp::fast-intersect (nil nil nil nil nil nil (cond)) (nil nil ((empty X) (empty Y) (equal (head X) (head Y)) (<< (head X) (head Y)) t) nil nil nil nil) (nil nil (sfix sfix) (cons recursive-call recursive-call) nil nil nil) ((X Y Y X) nil (head tail tail) (recursive-call) nil nil nil) ((X X Y) nil (tail tail) nil nil nil nil) ((X Y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/osets/fast.lisp::fast-difference (nil nil nil nil nil nil (cond)) (nil nil ((empty X) (empty Y) (equal (head X) (head Y)) (<< (head X) (head Y)) t) nil nil nil nil) ((X) nil (sfix) (recursive-call cons recursive-call) nil nil nil) ((X X) nil (tail tail head tail) (recursive-call) nil nil nil) ((X Y X Y Y) nil (tail) nil nil nil nil) ((X) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))