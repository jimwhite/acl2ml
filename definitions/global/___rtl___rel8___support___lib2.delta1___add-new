((/rtl/rel8/support/lib2.delta1/add-new.lisp::rc-carry_alt (nil nil nil nil (if) nil nil) (nil (0) (zp) (logior) nil nil nil) ((k) nil nil (logand logior) nil nil nil) (nil nil nil (bitn_alt bitn_alt logand logand) nil nil nil) ((x y) nil (1- 1-) (bitn_alt bitn_alt) (recursive-call recursive-call) nil nil) ((k k x x y y x y) nil (1- 1- 1- 1-) nil nil nil nil) ((k k k k) nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::rc-sum_alt (nil nil nil nil (if) nil nil) (nil (0) (zp) nil nil (cat_alt) nil) ((k) (1) (1-) (logxor) (recursive-call) nil nil) ((x y k) nil (1-) (bitn_alt logxor) nil nil nil) ((x k) nil (1-) (bitn_alt) (rc-carry_alt) nil nil) ((k y x y) nil (1- 1-) nil nil nil nil) ((k k) nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::gen_alt (nil nil nil nil (if) nil nil) (nil (0) nil nil (and if) nil nil) (nil nil (natp natp) (>= = bitn_alt) nil (recursive-call) nil) ((i j i j x i x y j) nil (1-) (bitn_alt bitn_alt) nil nil nil) ((x i y i i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::prop_alt (nil nil nil nil (if) nil nil) (nil (1) nil nil (and if) nil nil) (nil (0) (natp natp) (>= =) nil (recursive-call) nil) ((i j i j x y j) nil (1-) (bitn_alt bitn_alt) nil nil nil) ((x i y i i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lamt_alt (nil nil nil (logxor) nil nil nil) ((a) nil nil nil (bits_alt) nil nil) ((e) (0) (lognot) nil nil nil nil) ((b) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lamg_alt (nil nil nil (logand) nil nil nil) ((a) nil nil nil (bits_alt) nil nil) ((e) (0) (lognot) nil nil nil nil) ((b) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lamz_alt (nil nil nil nil (bits_alt) nil nil) ((e) (0) (lognot) nil nil nil nil) (nil nil nil (logior) nil nil nil) ((a) nil nil nil (bits_alt) nil nil) ((e) (0) (lognot) nil nil nil nil) ((b) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lam1_alt (nil nil nil (logand) nil nil nil) (nil nil nil (logand) (bits_alt) nil nil) ((e) (2) nil nil (lamt_alt bits_alt bits_alt) nil nil) ((a b e) (1 0) (1- lognot) (-) (lamg_alt) nil nil) ((a b e e e) (2) nil nil (lamz_alt) nil nil) ((a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lam2_alt (nil nil nil (logand) nil nil nil) (nil nil nil (logand) (bits_alt) nil nil) ((e) (2) (lognot) nil (bits_alt bits_alt) nil nil) (nil (1 0) (1- lognot) (-) (lamt_alt lamz_alt) nil nil) ((a b e a b e e e) (2) nil nil (lamz_alt) nil nil) ((a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lam3_alt (nil nil nil (logand) nil nil nil) (nil nil nil (logand) (bits_alt) nil nil) ((e) (2) nil nil (lamt_alt bits_alt bits_alt) nil nil) ((a b e) (1 0) (1- lognot) (-) (lamz_alt) nil nil) ((a b e e e) (2) nil nil (lamg_alt) nil nil) ((a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lam4_alt (nil nil nil (logand) nil nil nil) (nil nil nil (logand) (bits_alt) nil nil) ((e) (2) (lognot) nil (bits_alt bits_alt) nil nil) (nil (1 0) (1- lognot) (-) (lamt_alt lamg_alt) nil nil) ((a b e a b e e e) (2) nil nil (lamg_alt) nil nil) ((a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lam0_alt (nil nil nil (logior) nil nil nil) (nil nil nil (logior) (lam1_alt) nil nil) ((a b e) nil nil (logior) (lam2_alt) nil nil) ((a b e) nil nil nil (lam3_alt lam4_alt) nil nil) ((a b e a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/lib2.delta1/add-new.lisp::lamb_alt (nil nil nil (+) nil nil nil) (nil nil nil (* bitn_alt) nil nil nil) (nil (2 0) (lognot) nil (lam0_alt) nil nil) ((a b e) nil nil nil (lamt_alt) nil nil) ((a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))