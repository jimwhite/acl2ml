((/nonstd/misc/sin-cos.lisp::compute-series (nil nil nil nil (if) nil nil) ((ans) nil (zp) nil nil nil nil) ((itr x) nil (not 1-) (+) (* * if) nil nil) ((parity x x ex fact num itr parity) (2) nil (+ + + -) nil nil nil) ((num num ans ans) (2 1) nil (/ /) nil nil nil) ((ex fact ex fact) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::fast-compute-series (nil nil nil nil (if) nil nil) (nil nil (zp) (mv let*) nil nil nil) ((itr num-sum denom-sum) nil nil nil nil nil ((n+1*n+2 (* (+ n 1) (+ n 2))))) ((num-x^2 denom-x^2 new-num-x^n new-num-sum new-denom-sum) nil (multiplier new-denom-sum adjusted-num-sum new-num-x^n new-num-sum not 1-) (+) nil nil nil) ((n parity itr) (2) nil (* * * *) (if) nil nil) ((denom-x^2 n+1*n+2 denom-sum multiplier num-sum multiplier num-x^n num-x^2 parity) nil nil (+ -) nil nil nil) ((adjusted-num-sum new-num-x^n adjusted-num-sum new-num-x^n) nil nil nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::fast-compute-cos (nil nil nil nil nil nil nil) ((nil itr) (1 1 1 0) nil (* *) nil nil nil) (nil nil (numerator numerator denominator denominator) nil nil nil nil) ((x x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::fast-compute-sin (nil nil nil nil nil nil nil) ((nil itr) (1) (numerator numerator denominator) (* *) nil nil nil) ((x x x) nil (numerator numerator denominator denominator) nil nil nil nil) ((x x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::truncated-integer-cos (nil nil nil nil (mv-let) nil nil) (nil nil (num) (fast-compute-cos truncate) nil nil nil) ((denom x itr denom) nil nil (*) nil nil nil) ((num scale) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::truncated-integer-sin (nil nil nil nil (mv-let) nil nil) (nil nil (num) (fast-compute-sin truncate) nil nil nil) ((denom x itr denom) nil nil (*) nil nil nil) ((num scale) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::truncated-integer-sin/cos-table-fn (nil nil nil (cond) nil nil nil) (nil nil ((zp (- n i)) t) nil nil nil nil) ((nil) nil nil (let) nil nil nil) (((i/n (/ i n))) nil nil (cons) nil nil nil) (nil nil nil (cons) nil nil nil) ((i sin/cos n pie itr scale) nil (1+) nil (case) nil nil) ((sin/cos i) nil (:sin t) nil nil nil nil)) (/nonstd/misc/sin-cos.lisp::truncated-integer-sin/cos-table (nil nil nil nil nil nil nil) ((sin/cos n pie itr scale) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))