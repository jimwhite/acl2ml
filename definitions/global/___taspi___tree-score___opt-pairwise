((/taspi/tree-score/opt-pairwise.lisp::make-raw-sequence-pairings-each (nil nil nil nil (if) nil nil) ((acc) nil (consp) (let) nil nil nil) ((child (childSeq (cdr (assoc-hqual (car child) seqs-with-tree-keys)))) nil nil nil nil (recursive-call) nil) ((childSeq seqs-with-tree-keys) nil (car) nil nil (recursive-call) nil) ((child parent-seq seqs-with-tree-keys) nil (cdr) (cons) nil nil nil) ((child acc) nil nil (cons) nil nil nil) ((parent-seq childSeq) nil nil nil nil nil nil)) (/taspi/tree-score/opt-pairwise.lisp::make-raw-sequence-pairings (nil nil nil (let) nil nil nil) (((parent-seq (cdr (assoc-hqual tree seqs-with-tree-keys)))) nil nil nil nil (make-raw-sequence-pairings-each) nil) ((tree parent-seq seqs-with-tree-keys nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/opt-pairwise.lisp::get-opt-score-from-raw-pairings (nil nil nil nil (if) nil nil) (nil (0) (consp) (+) nil nil nil) ((pairings) nil (get-score-from-matrix) (recursive-call) nil nil nil) ((cost-stuff) nil (cdr) nil (build-align-matrix) nil nil) ((cost-stuff pairings) nil (caar cdar) nil nil nil nil) ((pairings pairings) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/opt-pairwise.lisp::update-raw-sequence-keys (nil nil nil nil (if) nil nil) ((sequences) nil (consp) (recursive-call) nil nil nil) ((anc-tree-mapping) nil (cdr) nil (hut) nil nil) ((sequences anc-tree-mapping) nil (cdar cdr) nil nil nil nil) ((anc-tree-mapping) nil nil (het) nil nil nil) ((sequences) nil (caar) nil nil nil nil) ((anc-tree-mapping) nil nil nil nil nil nil)) (/taspi/tree-score/opt-pairwise.lisp::get-opt-score-from-fully-loaded-tree (nil nil nil (let*) nil nil nil) (nil nil ((new-seqs (update-raw-sequence-keys sequences anc-mappings))) (get-opt-score-from-raw-pairings) nil nil nil) ((pairings cost-stuff) nil (pairings) nil nil nil nil) (nil nil nil (make-raw-sequence-pairings) nil nil nil) ((tree new-seqs) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))