((/nonstd/misc/sort-symbols.lisp::strict-merge-symbol-< (nil nil nil nil nil nil (cond)) (nil nil ((endp l1) (endp l2) (eq (car l1) (car l2)) (symbol-< (car l1) (car l2)) t) nil nil nil nil) (nil nil nil (revappend revappend) (recursive-call recursive-call recursive-call) nil nil) ((acc l2 acc l1 l2 l1) nil (cdr cdr cdr cdr) (cons cons cons) nil nil nil) ((l1 l2 acc l1 acc l2 acc) nil (car car car) nil nil nil nil) ((l1 l1 l2) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sort-symbols.lisp::strict-merge-sort-symbol-< (nil nil nil (cond) nil nil nil) (nil nil ((endp (cdr l)) t) nil nil nil nil) ((l) nil nil nil (strict-merge-symbol-<) nil nil) ((nil) nil (recursive-call recursive-call) nil nil nil nil) (nil nil (evens odds) nil nil nil nil) ((l l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sort-symbols.lisp::strict-symbol-<-sortedp (nil nil nil (cond) nil nil nil) (nil nil ((or (endp x) (null (cdr x))) t) nil nil nil nil) ((t) nil nil (and) nil nil nil) (nil nil (recursive-call) (symbol-<) nil nil nil) (nil nil (car cadr cdr) nil nil nil nil) ((x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/sort-symbols.lisp::sort-symbol-listp (nil nil nil (cond) nil nil nil) (nil nil ((strict-symbol-<-sortedp x) t) nil nil nil nil) ((x) nil (strict-merge-sort-symbol-<) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))