((/rtl/rel7/lib/bits.lisp::sumbits (nil nil nil nil (if) nil nil) (nil (0) (zp) (+) nil nil nil) ((n) nil nil (* recursive-call) nil nil nil) ((x) nil (1-) (expt bitn) nil nil nil) ((x n) (2) (1- 1-) nil nil nil nil) ((n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/bits.lisp::sumbits-badguy (nil nil nil nil (if) nil nil) (nil (0) (zp) nil (if) nil nil) ((k) nil (not 1-) nil (recursive-call) nil nil) ((k x y) nil (1-) (equal) nil nil nil) ((k) nil nil (bitn bitn) nil nil nil) ((x y) nil (1- 1-) nil nil nil nil) ((k k) nil nil nil nil nil nil)) (/rtl/rel7/lib/bits.lisp::all-bits-p (nil nil nil nil (if) nil nil) ((t) nil (zp) (and) nil nil nil) ((k) nil nil (or recursive-call) nil nil nil) ((b) nil (1-) (= =) nil nil nil) ((k) (0 1) nil (nth nth) nil nil nil) ((b b) nil (1- 1-) nil nil nil nil) ((k k) nil nil nil nil nil nil)) (/rtl/rel7/lib/bits.lisp::sum-b (nil nil nil nil (if) nil nil) (nil (0) (zp) (+) nil nil nil) ((k) nil nil (* recursive-call) nil nil nil) ((b) nil (1-) (expt nth) nil nil nil) ((b k) (2) (1- 1-) nil nil nil nil) ((k k) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/bits.lisp::formal-+ (nil nil nil nil (if) nil nil) (nil nil nil (and +) (list) nil nil) ((x y x y) nil (acl2-numberp acl2-numberp quote) nil nil nil nil) ((x y +) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/bits.lisp::cat-size (nil nil nil nil (if) nil nil) (nil nil (endp cadr) (formal-+) nil nil nil) ((x) nil (cddr cadr recursive-call) nil nil nil nil) ((x x) nil (cddr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))