((/ordinals/lexicographic-book.lisp::natp-listp (nil nil nil (cond) nil nil nil) (nil nil ((atom x) t) nil nil nil nil) (nil nil (null) (and) nil nil nil) ((x) nil (natp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::lexp (nil nil nil (or) nil nil nil) (nil nil (natp) (and) nil nil nil) ((x) nil (consp natp-listp) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::d< (nil nil nil nil (and) nil nil) (nil nil (consp consp) (or) nil nil nil) ((x y) nil nil (< and) nil nil nil) (nil nil (car car) (= recursive-call) nil nil nil) ((x y) nil (car car cdr cdr) nil nil nil nil) ((x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::l< (nil nil nil (or) nil nil nil) (nil nil nil (< and) nil nil nil) (nil nil (len len) (=) (if) nil nil) ((x y) nil (len len atom) (< d<) nil nil nil) ((x y x x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::lsttoo (nil nil nil nil (if) nil nil) (nil (0) (endp) (o+) nil nil nil) ((x) nil (recursive-call) (o*) nil nil nil) (nil nil (1+ cdr) (o^) nil nil nil) ((omega x) nil (len car) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::ltoo (nil nil nil nil (if) nil nil) (nil nil (atom lsttoo) nil nil (mbe) nil) ((x :logic :exec x x) nil (nfix) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::llist-macro (nil nil nil nil (if) nil nil) ((nil) nil (consp `) nil nil nil nil) ((lst) nil ((nfix (, (car lst)))) nil nil nil nil) (nil nil (,@) nil nil nil nil) (nil nil (recursive-call) nil nil nil nil) (nil nil (cdr) nil nil nil nil) ((lst) nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::ack (nil nil nil nil (if) nil nil) (nil nil (zp 1+) nil (if) nil nil) ((x y) nil (zp) (recursive-call recursive-call) nil nil nil) ((y) (1) (1- 1-) (recursive-call) nil nil nil) ((x x x) nil (1-) nil nil nil nil) ((y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/ordinals/lexicographic-book.lisp::app (nil nil nil nil (if) nil nil) ((y) nil (endp) (cons) nil nil nil) ((x) nil (car) (recursive-call) nil nil nil) ((x y) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))