((/coi/records/domain.lisp::rkeysub (nil nil nil nil (if) nil nil) ((t) nil (consp) (let) nil nil nil) ((keys (key (car keys))) nil nil (and) nil nil nil) (nil nil nil (equal) (recursive-call) nil nil) (nil nil nil (g g remove clr clr) nil nil nil) ((key r1 key r2 keys key r1 key r2) nil (car) nil nil nil nil) ((keys) nil nil nil nil nil nil)) (/coi/records/domain.lisp::rkeysub-equiv-induction (nil nil nil nil (if) nil nil) (nil nil (consp) (let) nil (list) nil) ((s1 (key (car s1)) s1 s2 x y) nil nil nil (if) nil nil) ((nil) nil nil (list::memberp) (if) nil nil) ((key s2 nil) nil nil (equal) nil (recursive-call) nil) (nil nil nil (g g remove remove clr clr) nil nil nil) ((key x key y key s1 key s2 key x key y) nil nil nil nil nil nil)) (/coi/records/domain.lisp::rkeyquiv (nil nil nil (and) nil nil nil) (nil nil nil nil (rkeysub rkeysub) nil nil) ((x y x y) nil (rkeys rkeys) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))