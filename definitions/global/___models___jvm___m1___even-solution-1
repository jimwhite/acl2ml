((/models/jvm/m1/even-solution-1.lisp::ok-inputs (nil nil (natp) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-1.lisp::theta (nil nil nil nil (if) nil nil) (nil (1 0) nil (equal) nil nil nil) (nil (0) nil (mod) nil nil nil) ((n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-1.lisp::helper (nil nil nil nil (if) nil nil) (nil (1) (zp) nil (if) nil nil) ((n) (0) (recursive-call) (equal) nil nil nil) ((n) (1) nil (-) nil nil nil) ((n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-1.lisp::fn (nil nil (helper) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-1.lisp::loop-clk (nil nil nil nil (if) nil nil) (nil (4) (zp) nil (if) nil nil) ((n) (7) nil (equal clk+) nil nil nil) ((n) (1 11) (recursive-call) nil nil nil nil) (nil nil nil (-) nil nil nil) ((n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-1.lisp::clk (nil nil (loop-clk) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))