((/coi/termination/assuming/zero.lisp::mag (nil nil nil nil (if) nil nil) (nil (0) (zp recursive-call) nil nil nil nil) ((n) nil (1-) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/termination/assuming/zero.lisp::m1 (nil nil nil nil (if) nil nil) (nil (0 1) nil (<=) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/termination/assuming/zero.lisp::m2 (nil nil nil (-) nil nil nil) (nil nil nil (max min) nil nil nil) ((z z) nil nil (max min) nil nil nil) ((x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/termination/assuming/zero.lisp::m3 (nil nil nil (-) nil nil nil) ((x) nil nil (min) nil nil nil) ((z) nil nil (min) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/termination/assuming/zero.lisp::tarai-measure (nil nil nil nil (acl2::llist) nil nil) (nil nil nil nil (m1 m2 m3) nil nil) ((x y z x y z x y z) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/termination/assuming/zero.lisp::tarai-open (nil nil nil nil (if) nil nil) ((y) nil nil (<=) (if) nil nil) ((x y z x) nil nil (<=) nil nil nil) ((y z) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/termination/assuming/zero.lisp::tarai-induction (nil nil nil (cond) nil nil nil) (nil nil ((and (integerp x) (integerp y) (integerp z) (> x y)) t) nil nil nil nil) ((y) nil nil nil nil (list) nil) (nil nil nil nil (recursive-call recursive-call recursive-call recursive-call) nil nil) ((y z z x x y) nil (1- 1- 1-) nil (tarai-open tarai-open tarai-open) nil nil) ((y z z x x y x y z) nil (1- 1- 1-) nil nil nil nil) ((x y z) nil nil nil nil nil nil)))