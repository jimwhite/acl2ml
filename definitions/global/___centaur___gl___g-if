((/centaur/gl/g-if.lisp::def-g-identity-fn (nil nil nil (b*) nil nil nil) (nil nil ((gobjectp-thm (intern-in-package-of-symbol (concatenate (quote string) GOBJECTP- (symbol-name name)) (quote gl::foo))) `) nil nil nil nil) (nil nil (geval-thm) nil nil (progn) nil) (nil nil (in-theory) (intern-in-package-of-symbol) nil (defun defthm defthm) nil) ((x x :hints (goal :expand ((:free (x) (hide x)))) :hints (goal :expand ((:free (x) (hide x))))) nil (quote , declare , ,) (equal equal) (concatenate disable) nil nil) ((GEVAL- gl::foo name gobjectp-thm geval-thm (, name)) nil (quote symbol-name gobjectp , , , :type-prescription) (xargs generic-geval) nil nil nil) ((string name :guard t env name) nil ((, name) (, name) ,) nil (if if) nil nil)) (/centaur/gl/g-if.lisp::g-hyp-marker (nil nil (bfrfix) nil nil nil nil) ((hyp) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))