((/coi/syntax/auxilary.lisp::collect-variables-rec (nil nil nil nil (if) nil nil) ((res) nil (consp) nil (if) nil nil) ((term) nil (consp) (let) (if) nil nil) (((res (collect-variables-rec t (car term) res)) fn) nil (car) (let) (recursive-call recursive-call) nil nil) ((term nil res nil res (res (append (if (symbolp (car term)) (list (car term)) nil) res))) nil (cdr cdr) nil (recursive-call) nil nil) ((term term nil res) nil (cdr) nil nil nil nil) ((term) nil nil nil nil nil nil)) (/coi/syntax/auxilary.lisp::join-lists (nil nil nil nil (if) nil nil) ((nil) nil nil (and cons) nil nil nil) (nil nil (consp consp) (list recursive-call) nil nil nil) ((list1 list2) nil (car car cdr cdr) nil nil nil nil) ((list1 list2 list1 list2) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))