((/models/y86/y86-basic/common/misc-events.lisp::gl-int (nil nil nil nil (if) nil nil) ((nil) nil (zp) (cons) nil nil nil) ((count start) nil nil nil (recursive-call) nil nil) ((by) nil (1-) (+) nil nil nil) ((by start count) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/y86/y86-basic/common/misc-events.lisp::reg-info-alistp (nil nil nil nil (if) nil nil) (nil nil (atom null) (let) nil nil nil) ((alst alst (entry (car alst))) nil nil nil nil nil (and)) (nil nil (consp consp consp null) (let) nil nil nil) ((entry) nil (cdr cddr cdddr) ((key (car entry))) nil nil nil) ((entry entry entry) nil (pos width natp natp) (or = <=) (recursive-call) nil nil) ((pos width position pos max-size max-size) nil (cadr caddr keywordp cdr) (and + +) nil nil nil)) (/models/y86/y86-basic/common/misc-events.lisp::x86-flg-field-pos-width (nil nil nil nil (if) nil nil) (nil nil (atom) (mv let) nil nil nil) ((reg-info (entry (car reg-info))) (0) nil (or) (if) nil nil) (nil (0) (not) (cw mv let) nil nil nil) ((x86-flg-field-pos-width:  Unknown flag:   ~p0.~% flg) (0) nil (or (name (car entry))) (if) nil nil) (nil (0) (consp consp consp null natp natp pos width) (or cw eq mv recursive-call) nil nil nil) ((entry x86-flg-field-pos-width:  Entry malformed:   ~p0.~% entry name flg pos width flg) nil (cdr cddr cdddr symbolp natp cadr caddr cadr caddr cdr) nil nil nil nil)) (/models/y86/y86-basic/common/misc-events.lisp::x86-reg-slice (nil nil nil nil (mv-let) nil nil) (nil nil (pos) (x86-flg-field-pos-width let) nil nil nil) ((size flg reg-info (mask (1- (expt 2 size)))) nil (`) nil nil nil nil) (nil nil nil (logand) nil nil nil) (nil nil (,) (ash) nil nil nil) ((mask) nil (, -) nil nil nil nil) ((reg) nil (,) nil nil nil nil)) (/models/y86/y86-basic/common/misc-events.lisp::x86-reg-field (nil nil nil nil (mv-let) nil nil) (nil nil (pos) (x86-flg-field-pos-width let) nil nil nil) ((size flg reg-info (mask (1- (expt 2 size)))) nil (`) nil nil nil nil) (nil nil nil (logand) nil nil nil) (nil nil (,) (ash) nil nil nil) ((reg) nil (, ,) nil nil nil nil) ((mask pos) nil nil nil nil nil nil)) (/models/y86/y86-basic/common/misc-events.lisp::x86-update-reg-slice (nil nil nil nil (mv-let) nil nil) (nil nil (pos) (x86-flg-field-pos-width let) nil nil nil) ((size flg reg-info (mask (1- (expt 2 size)))) nil (`) nil nil nil nil) (nil nil (n32) nil nil nil nil) (nil nil nil (logior) nil nil nil) (nil nil nil (ash logand) nil nil nil) (nil nil (, , lognot) (logand) nil nil nil)) (/models/y86/y86-basic/common/misc-events.lisp::x86-update-reg-field (nil nil nil nil (mv-let) nil nil) (nil nil (pos) (x86-flg-field-pos-width let) nil nil nil) ((size flg reg-info (mask (1- (expt 2 size)))) nil (`) nil nil nil nil) (nil nil (n32) nil nil nil nil) (nil nil nil (logior) nil nil nil) (nil nil (,) (logand) nil nil nil) ((val) nil (, lognot) nil nil nil nil)))