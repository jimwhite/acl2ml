((/taspi/sets-input/tree-support-in-set.lisp::not-conflicting (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((set) nil (quote) (let) nil nil nil) ((bad-tree-comparison-in-not-conflicting) nil (treep treep consp consp int-symlist (tree-fringes (term-to-bfringes tree taxa-list))) (<=) (if) nil nil) ((tree tree taxa-list) (2) (car car len curFringes quote) nil (and if) nil nil) ((set set taxa-list bad-tree-fringes-in-not-conflicting) nil (not q-no-conflicts-list) (term-to-bfringes good-depths subset-list cons) (recursive-call) nil nil) ((taxa-list tree taxa-list) nil (car build-taxa-list-tree rev car cdr) (app member-gen btrees-to-fringes) (sort-bdd-fringes recursive-call) nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::not-conflicting-brlens (nil nil nil (let) nil nil nil) (nil nil ((trees-no-brlens (remove-brlens-list set))) nil (not-conflicting) nil nil) ((tree-no-brlens trees-no-brlens taxa-list) nil (tree-no-brlens) nil nil nil nil) (nil nil (remove-brlens) nil nil nil nil) ((tree) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::trees-supporting-all-branches (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((set) nil (quote) (let) nil nil nil) ((bad-tree-comparison-in-trees-supporting-all-branches) nil (treep treep consp consp int-symlist (tree-fringes (term-to-bfringes tree taxa-list))) (<=) (if) nil nil) ((tree tree taxa-list) (2) (car car len curFringes) (subset cons) (recursive-call) nil nil) ((set set taxa-list tree-fringes curFringes tree taxa-list) nil (car cdr) (term-to-bfringes) (recursive-call) nil nil) ((taxa-list set tree taxa-list set) nil (car cdr) nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::trees-supporting-all-branches-brlens (nil nil nil (let) nil nil nil) (nil nil ((trees-no-brlens (remove-brlens-list set))) nil (trees-supporting-all-branches) nil nil) ((tree-no-brlens trees-no-brlens taxa-list) nil (tree-no-brlens) nil nil nil nil) (nil nil (remove-brlens) nil nil nil nil) ((tree) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::count-support (nil nil nil nil (if) nil nil) ((acc) nil (consp) nil (if) nil nil) ((tree-fringes) nil nil (member-gen) (recursive-call recursive-call) nil nil) ((comp-fringes comp-fringes comp-fringes acc) nil (car cdr 1+ cdr) nil nil nil nil) ((tree-fringes tree-fringes acc tree-fringes) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::how-much-support-for-branches-in-tree (nil nil nil nil (if) nil nil) (nil (0) nil (let) nil nil nil) (nil nil (treep treep consp consp int-symlist (tree-fringes (term-to-bfringes tree taxa-list))) (<=) (count-support) nil nil) ((tree compTree compTree tree taxa-list tree-fringes comp-fringes) (2 0) (len comp-fringes) nil nil nil nil) ((taxa-list) nil nil (term-to-bfringes) nil nil nil) ((compTree taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::get-trees-with-count-greater (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((set) nil (quote) nil (if) nil nil) ((bad-comparison-in-get-trees-with-count-greater) nil (treep treep consp consp int-symlist) (<= <= cons) nil (recursive-call) nil) ((tree tree taxa-list x x tree taxa-list) (2) (car car len car cdr) nil (how-much-support-for-branches-in-tree) (recursive-call) nil) ((set set taxa-list tree taxa-list set x tree taxa-list set) nil (car cdr) nil nil nil nil) ((set set) nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::trees-supporting-x-proportion-of-branches-in-tree (nil nil nil nil (if) nil nil) (nil nil (quote) (let) nil (and) nil) (((fringes (term-to-bfringes tree taxa-list)) bad-comparison-in-trees-supporting-x-proportion-of-branches-in-tree) nil (treep consp int-symlist) (<= let) nil nil nil) ((tree tree taxa-list (needed-count (* (len fringes) (/ x 100)))) (2) (len) nil nil (get-trees-with-count-greater) nil) ((taxa-list needed-count tree set taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::trees-supporting-x-proportion-of-branches-in-tree-brlens (nil nil nil (let) nil nil nil) (nil nil ((trees-no-brlens (remove-brlens-list set))) nil nil (trees-supporting-x-proportion-of-branches-in-tree) nil) ((x tree-no-brlens trees-no-brlens taxa-list) nil (tree-no-brlens) nil nil nil nil) (nil nil (remove-brlens) nil nil nil nil) ((tree) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::branch-support-trees (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((set) nil (quote) (let) nil (and) nil) (((curFringes (term-to-bfringes (car set) taxa-list)) bad-tree-comparison) nil (treep consp int-symlist) (<=) (if) nil nil) ((taxa-list) (2) (car car len) (member-gen cons) (recursive-call) nil nil) ((set set taxa-list branch curFringes branch taxa-list) nil (car cdr) nil (recursive-call) nil nil) ((set branch taxa-list set) nil (cdr) nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::proportion-of-trees-supporting-branch (nil nil nil nil (if) nil nil) (nil (0) nil (< /) nil nil nil) (nil (0) (len len len) nil nil nil nil) ((set set) nil nil nil (branch-support-trees) nil nil) ((branch set taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::proportion-of-trees-supporting-branch-brlens (nil nil nil nil (if) nil nil) (nil (0) nil (< /) nil nil nil) (nil (0) (len len len) nil nil nil nil) ((set set) nil nil nil (branch-support-trees) nil nil) ((branch taxa-list) nil (remove-brlens-list) nil nil nil nil) ((set) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::make-tree-support-for-branches (nil nil nil nil (if) nil nil) ((nil) nil (consp) (cons) nil nil nil) ((fringes) nil nil (cons) (recursive-call) nil nil) ((set taxa-list) nil (car cdr) nil (branch-support-trees) nil nil) ((fringes set taxa-list fringes) nil (car) nil nil nil nil) ((fringes) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::branch-by-branch-tree-support (nil nil nil nil (if) nil nil) (nil nil (quote) (let) nil (and) nil) (((fringes (term-to-bfringes tree taxa-list)) bad-input-tree) nil (treep consp int-symlist) (<=) (make-tree-support-for-branches) nil nil) ((tree tree taxa-list fringes set taxa-list) (2) (len) nil nil nil nil) ((taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::branch-by-branch-tree-support-brlens (nil nil nil (let) nil nil nil) (nil nil ((trees-no-brlens (remove-brlens-list set))) nil (branch-by-branch-tree-support) nil nil) ((tree-no-brlens trees-no-brlens taxa-list) nil (tree-no-brlens) nil nil nil nil) (nil nil (remove-brlens) nil nil nil nil) ((tree) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::make-proportion-support-for-branches (nil nil nil nil (if) nil nil) ((nil) nil (consp) (cons) nil nil nil) ((fringes) nil nil (cons) (recursive-call) nil nil) ((set taxa-list) nil (car cdr) nil (proportion-of-trees-supporting-branch) nil nil) ((fringes set taxa-list fringes) nil (car) nil nil nil nil) ((fringes) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::branch-by-branch-proportion-support (nil nil nil nil (if) nil nil) (nil nil (quote) (let) nil (and) nil) (((fringes (term-to-bfringes tree taxa-list)) bad-input-tree) nil (treep consp int-symlist) (<=) (make-proportion-support-for-branches) nil nil) ((tree tree taxa-list fringes set taxa-list) (2) (len) nil nil nil nil) ((taxa-list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/sets-input/tree-support-in-set.lisp::branch-by-branch-proportion-support-brlens (nil nil nil (let) nil nil nil) (nil nil ((trees-no-brlens (remove-brlens-list set))) nil (branch-by-branch-proportion-support) nil nil) ((tree-no-brlens trees-no-brlens taxa-list) nil (tree-no-brlens) nil nil nil nil) (nil nil (remove-brlens) nil nil nil nil) ((tree) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))