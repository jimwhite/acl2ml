(nil (/rtl/rel4/arithmetic/expo-proofs.lisp::get-expt-factors (nil nil nil nil (if) nil nil) ((nil) nil (endp) (let*) nil nil nil) ((factor-list (factor (car factor-list))) nil nil nil (if) nil nil) (nil nil (recursive-call) (and cons) nil nil nil) ((factor) nil (consp recursive-call cdr) (or) nil nil nil) ((factor factor-list) nil (cdr) nil (and) nil nil) ((factor-list) nil (consp consp consp consp) (equal equal equal equal equal) nil nil nil)) (/rtl/rel4/arithmetic/expo-proofs.lisp::find-common-expt-factors-to-cancel (nil nil (get-expt-factors) nil nil nil nil) (nil nil (remove-cancelling-factor-pairs) nil nil nil nil) (nil nil (find-common-factors-in-sum-of-products) nil nil nil nil) ((expr) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))