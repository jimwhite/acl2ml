((/concurrent-programs/bakery/records.lisp::rcdp (nil nil nil (or) nil nil nil) (nil nil (null) nil nil nil (and)) ((x) nil (consp consp recursive-call cdar) (or) nil nil nil) ((x x) nil (car cdr null) (<<) nil nil nil) ((x x) nil (cdr caar caadr) nil nil nil nil) ((x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::ifrp (nil nil nil (or) nil nil nil) (nil nil (not) nil nil nil (and)) (nil nil (rcdp consp null consp null recursive-call) nil nil nil nil) ((x x) nil (cdr car caar cdar) nil nil nil nil) ((x x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::acl2->rcd (nil nil nil nil (if) nil nil) ((x) nil (ifrp list) nil nil nil nil) ((x) nil nil (cons) nil nil nil) ((nil x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::rcd->acl2 (nil nil nil nil (if) nil nil) ((x) nil (ifrp cdar) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::g-aux (nil nil nil nil (cond) nil nil) (nil nil ((or (endp x) (<< a (caar x))) (equal a (caar x)) t) nil nil nil nil) ((nil) nil (cdar) (recursive-call) nil nil nil) ((x a) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::g (nil nil nil (g-aux) nil nil nil) ((a) nil (acl2->rcd) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::s-aux (nil nil nil nil (cond) nil nil) (nil nil ((or (endp r) (<< a (caar r))) (equal a (caar r)) t) nil nil nil nil) (nil nil nil (cons) (if if) nil nil) ((v r v) nil (cdr car) (cons cons) (recursive-call) nil nil) ((r r r a v) nil (cdr cdr) (cons cons) nil nil nil) ((a v a v r r) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::s (nil nil (rcd->acl2) nil nil nil nil) (nil nil nil nil (s-aux) nil nil) ((a v) nil (acl2->rcd) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::keys-aux (nil nil nil (cond) nil nil nil) (nil nil ((endp x) t) nil nil nil nil) ((nil) nil nil (cons) nil nil nil) (nil nil (caar recursive-call) nil nil nil nil) ((x) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::keys (nil nil (keys-aux) nil nil nil nil) (nil nil (acl2->rcd) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/records.lisp::update-macro (nil nil nil nil (if) nil nil) ((result) nil (endp) (recursive-call) nil nil nil) ((upds) nil (cddr) nil nil (list) nil) ((upds result) nil (quote car cadr) nil nil nil nil) ((s upds upds) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))