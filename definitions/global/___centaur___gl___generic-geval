((/centaur/gl/generic-geval.lisp::acl2::boolfix (nil nil nil nil (if) nil nil) ((x t nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/generic-geval.lisp::break-g-number (nil nil nil (let*) nil nil nil) (nil nil nil nil ((real-numer (nth 0 x))) (mv) nil) ((real-numer real-denom imag-numer imag-denom) nil (real-denom imag-numer imag-denom) nil nil nil nil) (nil nil nil (nth) (if if) nil nil) ((x) (2) (quote quote) (<= nth <= nth) nil nil nil) ((x t x t) (2 1 4 3) (len len) nil nil nil nil) ((x x) nil nil nil nil nil nil)) (/centaur/gl/generic-geval.lisp::components-to-number-fn (nil nil nil (complex) nil nil nil) (nil nil nil (* *) nil nil nil) ((rnum inum) nil nil nil (if if) nil nil) ((rden iden) nil (/ /) (eql eql) nil nil nil) ((rden rden iden iden) (0 0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/generic-geval.lisp::gobj-fix-thm-name (nil nil nil (intern-in-package-of-symbol) nil nil nil) ((name) nil nil nil (concatenate) nil nil) ((-GOBJ-FIX) nil (quote symbol-name) nil nil nil nil) ((string name) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/generic-geval.lisp::def-geval-fn (nil nil nil (sublis) nil nil nil) ((*geval-body-template*) nil (`) nil nil nil nil) (nil nil ((geval , geval)) nil nil nil nil) (nil nil nil (apply) nil nil nil) ((, apply) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/generic-geval.lisp::get-guard-verification-theorem (nil nil nil (b*) nil nil nil) (nil nil (value) nil nil nil ((wrld (w state)))) ((term) nil (ctx (er names) ens (mv clauses & state) term) nil nil nil nil) (nil nil (quote acl2::ens acl2::termify-clause-set) nil nil (acl2::chk-acceptable-verify-guards) (acl2::guard-obligation-clauses)) ((recursive-call name ctx wrld state state names nil ens wrld state clauses) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))