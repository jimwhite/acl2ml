((/coi/records/fixedpoint.lisp::ifrp-s-aux (nil nil nil nil (if) nil nil) (nil nil (endp) (and) (if) nil nil) ((r) nil (ifrp not null) nil (if if) nil nil) ((v a nil) nil (cdr) (<< and and <<) (if) nil nil) ((r a a) nil (caar not ifrp null caar) (equal and) (if if) nil nil) ((r v r r a v nil) nil (caar null ifrp caar ifrp ifrp) (and let) nil nil nil) ((r a v r (r (cdr r))) nil (not ifrp cdr list) nil (and) nil nil)) (/coi/records/fixedpoint.lisp::ifrp-s-aux-member (nil nil nil (let) nil nil nil) (((keys (alist::keys r))) nil nil (let) nil nil nil) (((size (len keys))) nil nil nil nil (cond) nil) (nil nil ((= 0 size) (= 1 size) (= 2 size) t) nil nil nil nil) ((nil) nil nil (and and and) nil nil nil) (nil nil (not ifrp ifrp) (list::memberp) (if and) nil nil) ((a v nil keys a) nil (not) (<< and g-aux list::memberp) (if) nil nil)) (/coi/records/fixedpoint.lisp::ifrp-s-member (nil nil nil (let) nil nil nil) (((keys (rkeys r))) nil nil (let) nil nil nil) (((size (len keys))) nil nil nil nil (cond) nil) (nil nil ((= 0 size) (= 1 size) (= 2 size) t) nil nil nil nil) ((nil) nil nil (and and and) nil nil nil) (nil nil (not ifrp ifrp) (list::memberp) (if and) nil nil) ((a v nil keys a) nil (not) (<< and g list::memberp) (if) nil nil)) (/coi/records/fixedpoint.lisp::ifrp-s (nil nil nil (let) nil nil nil) (((keys (rkeys r))) nil nil (let) nil nil nil) (((size (len keys))) nil nil nil nil (cond) nil) (nil nil ((= 0 size) (= 1 size) (= 2 size) t) nil nil nil nil) ((nil) nil nil (and and and) nil nil nil) (nil nil (not ifrp ifrp) (g) (if and) nil nil) ((a v nil r a) nil (not) (<< and g g) (if) nil nil)) (/coi/records/fixedpoint.lisp::iff-s-member (nil nil (not) nil nil nil nil) (nil nil nil (or) nil nil nil) (nil nil nil (and) (and) nil nil) (nil nil (not not not) (equal list::memberp) nil nil nil) ((V a v) (1) (len rkeys) nil (if) nil nil) ((r r) nil (ifrp rkeys) (g) nil nil nil) ((r nil r r) nil nil nil nil nil nil)) (/coi/records/fixedpoint.lisp::iff-s-ifrp (nil nil (not) nil nil nil nil) (nil nil nil (or) nil nil nil) (nil nil nil (and) (and) nil nil) (nil nil (not not not) (equal g) nil nil nil) ((V a r v) (1) (len) nil (if) nil nil) ((r) nil (ifrp rkeys) (g) nil nil nil) ((r nil r r) nil nil nil nil nil nil)) (/coi/records/fixedpoint.lisp::fixedpoint-s-fn (nil nil nil nil (or) nil nil) (nil nil nil (let and) (and) nil nil) (((keys (rkeys r))) nil (not not not) (let equal g) nil nil nil) (((size (len keys)) V a r v) (1) (len) nil (if) (cond) nil) ((r) nil ((= 0 size) (= 1 size) (= 2 size) t ifrp-as-fixedpoint rkeys) (g) nil nil nil) ((nil r nil r r) nil nil (and and and) nil nil nil) (nil nil (not ifrp-as-fixedpoint ifrp-as-fixedpoint) (g) (if and) nil nil)) (/coi/records/fixedpoint.lisp::iff-s-fixedpoint (nil nil (not) nil nil nil nil) (nil nil nil (or) nil nil nil) (nil nil nil (and) (and) nil nil) (nil nil (not not not) (equal g) nil nil nil) ((V a r v) (1) (len) nil (if) nil nil) ((r) nil (ifrp-as-fixedpoint rkeys) (g) nil nil nil) ((r nil r r) nil nil nil nil nil nil)))