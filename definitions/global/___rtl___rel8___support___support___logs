((/rtl/rel8/support/support/logs.lisp::log= (nil nil nil nil (if) nil nil) (nil (1 0) nil (equal) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::log<> (nil nil nil nil (if) nil nil) (nil (0 1) nil (equal) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::log< (nil nil nil nil (if) nil nil) (nil (1 0) nil (<) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::log<= (nil nil nil nil (if) nil nil) (nil (1 0) nil (<=) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::log> (nil nil nil nil (if) nil nil) (nil (1 0) nil (>) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::log>= (nil nil nil nil (if) nil nil) (nil (1 0) nil (>=) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::comp2 (nil nil nil nil (if) nil nil) ((x) nil (-) (<) nil nil nil) ((x) nil nil (expt -) nil nil nil) ((x) (2) (1-) (expt) nil nil nil) ((n n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::comp2< (nil nil nil (log<) nil nil nil) (nil nil nil (comp2 comp2) nil nil nil) ((x n y n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::comp2<= (nil nil nil (log<=) nil nil nil) (nil nil nil (comp2 comp2) nil nil nil) ((x n y n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::comp2> (nil nil nil (log>) nil nil nil) (nil nil nil (comp2 comp2) nil nil nil) ((x n y n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::comp2>= (nil nil nil (log>=) nil nil nil) (nil nil nil (comp2 comp2) nil nil nil) ((x n y n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::logand1 (nil nil nil (log=) nil nil nil) ((x) nil (1-) nil nil nil nil) (nil nil nil (expt) nil nil nil) ((n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::logior1 (nil nil nil nil (if) nil nil) (nil (0 1) nil (equal) nil nil nil) ((x) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/logs.lisp::logxor1 (nil nil nil nil (if) nil nil) (nil (1 0) (oddp) nil nil nil nil) (nil nil (logcount) nil nil nil nil) ((src) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))