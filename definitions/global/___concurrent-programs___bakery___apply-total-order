((/concurrent-programs/bakery/apply-total-order.lisp::memberp (nil nil nil (and) nil nil nil) (nil nil (consp) (or) nil nil nil) ((x) nil nil (equal recursive-call) nil nil nil) ((a a) nil (first rest) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/apply-total-order.lisp::drop (nil nil nil nil (cond) nil nil) (nil nil ((endp x) (equal a (first x)) t) nil nil nil nil) ((nil) nil nil (recursive-call cons) nil nil nil) ((a) nil (rest first) (recursive-call) nil nil nil) ((x x a) nil (rest) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/apply-total-order.lisp::insert (nil nil nil nil nil (cond) nil) (nil nil ((endp x) (equal a (first x)) (<< a (first x)) t) nil nil nil nil) ((x) nil (list) (cons cons) nil nil nil) ((a a x) nil (first) (recursive-call) nil nil nil) ((x a) nil (rest) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/apply-total-order.lisp::orderedp (nil nil nil (or) nil nil nil) (nil nil (endp) (and) nil nil nil) (nil nil (rest recursive-call) (<<) nil nil nil) ((x) nil (first second rest) nil nil nil nil) ((x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/apply-total-order.lisp::uniquep (nil nil nil (or) nil nil nil) (nil nil (endp) (and) nil nil nil) ((x) nil (not recursive-call) nil nil nil nil) (nil nil (rest) (memberp) nil nil nil) ((x) nil (first rest) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))