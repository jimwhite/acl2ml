((/centaur/gl/bvecs.lisp::bfr-listp1 (nil nil nil nil (if) nil nil) (nil nil (atom) (eq and) nil nil nil) ((x x nil) nil (bfr-p recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-listp (nil nil nil nil nil (mbe) nil) ((:logic :exec) nil nil (or) (if) nil nil) (nil nil (atom boolean-listp bfr-listp1) (eq and) nil nil nil) ((x x nil x x) nil (bfr-p recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-eval-list (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((x) nil nil (bfr-eval recursive-call) nil nil nil) ((env env) nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-list-fix (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((x) nil (bfr-fix recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-list-equiv (nil nil nil (equal) nil nil nil) (nil nil (bfr-list-fix bfr-list-fix) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-list-fix-vars-bindings (nil nil nil nil (if) nil nil) ((nil) nil (atom) (let) nil nil nil) ((vars (x (car vars))) nil nil (cons) nil nil nil) (nil nil (` recursive-call) nil nil nil nil) (nil nil ((, x) cdr) nil nil nil nil) ((vars) nil nil nil nil (mbe) nil) ((:logic :exec) nil (bfr-list-fix ,) nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-alistp (nil nil nil (or) nil nil nil) (nil nil (atom) (and) nil nil nil) ((x) nil (recursive-call) (or) nil nil nil) (nil nil (atom bfr-p cdr) nil nil nil nil) ((x) nil (car cdar) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/gl/bvecs.lisp::bfr-eval-alist (nil nil nil nil (if) nil nil) ((nil) nil (atom) nil (if) nil nil) ((al) nil (consp) (cons recursive-call) nil nil nil) ((vals) nil (car cdr) (cons recursive-call) nil nil nil) ((al vals al) nil (caar cdr) (bfr-eval) nil nil nil) ((al vals al) nil (cdar) nil nil nil nil) ((al) nil nil nil nil nil nil)))