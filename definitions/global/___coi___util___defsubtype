((/coi/util/defsubtype.lisp::arg-appears-in-body (nil nil nil nil (if) nil nil) ((nil) nil (consp) (cond) nil nil nil) ((body) nil ((consp (car body)) t) nil nil nil nil) (nil nil nil (or or) nil nil nil) (nil nil nil (recursive-call recursive-call equal recursive-call) nil nil nil) ((arg arg arg arg) nil (car cdr car cdr) nil nil nil nil) ((body body body body) nil nil nil nil nil nil)) (/coi/util/defsubtype.lisp::all-args-appear-in-body (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((args) nil nil (arg-appears-in-body recursive-call) nil nil nil) ((body body) nil (car cdr) nil nil nil nil) ((args args) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/util/defsubtype.lisp::negate-term (nil nil nil nil (if) nil nil) ((term) nil (consp) nil (if) nil nil) ((term) nil (cadr `) (and) nil nil nil) ((term) nil (consp not) (equal) nil nil nil) (nil nil (car quote cdr ,) nil nil nil nil) ((term not term term) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/util/defsubtype.lisp::fapp-appears (nil nil nil nil (if) nil nil) (nil nil (consp) (or equal) nil nil nil) ((term name term) nil nil (recursive-call) (if) nil nil) ((name) nil (consp cdr) (recursive-call equal) nil nil nil) ((term name name term) nil (car car) nil nil nil nil) ((term term) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/util/defsubtype.lisp::recursive-function (nil nil nil nil (if) nil nil) (nil nil nil nil (cond mv) nil (and)) ((nil nil nil) nil (consp consp consp consp (fapp-appears name (caddr body)) (fapp-appears name (cadddr body)) t) (equal) nil nil nil) ((body) nil (car quote cdr cddr cdddr) nil (mv mv mv) nil nil) ((body if body body body t t nil nil nil) nil (cadr caddr negate-term cadddr) nil nil nil nil) ((body body body) nil (cadr) nil nil nil nil) ((body) nil nil nil nil nil nil)))