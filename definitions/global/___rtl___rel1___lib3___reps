((/rtl/rel1/lib3/reps.lisp::bitn (nil nil nil nil (if) nil nil) (nil (1 0) nil (logbitp) nil nil nil) ((n x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::plistp (nil nil nil nil (if) nil nil) (nil nil (consp recursive-call) (equal) nil nil nil) ((x x nil) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::formatp (nil nil nil nil nil nil nil) (nil nil (plistp integerp integerp) (= > >) nil nil nil) ((phi) (2 0 0) (len car cadr car cadr) nil nil nil nil) ((phi phi phi phi phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::get-sbits (nil nil (ifix) nil nil nil nil) (nil nil (car) nil nil nil nil) ((phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::get-ebits (nil nil (ifix) nil nil nil nil) (nil nil (cadr) nil nil nil nil) ((phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::sgnf (nil nil nil (bitn) nil nil nil) ((z) nil nil (+) nil nil nil) (nil nil (get-sbits get-ebits) nil nil nil nil) ((phi phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::expf (nil nil nil nil (bits) nil nil) ((z) nil (get-sbits) nil (+) nil nil) ((phi) (-1) (get-sbits get-ebits) nil nil nil nil) ((phi phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::sigf (nil nil nil nil (bits) nil nil) ((z) (0) (1-) nil nil nil nil) (nil nil (get-sbits) nil nil nil nil) ((phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::normal-encoding-p (nil nil nil nil (and) nil nil) (nil nil (integerp) (>= >=) nil nil nil) ((z z) (0) nil (sigf expt) nil nil nil) ((z phi) (2) (1-) nil nil nil nil) (nil nil (get-sbits) nil nil nil nil) ((phi) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::decode (nil nil nil nil (*) nil nil) (nil nil nil (sigf expt) (if) nil nil) ((z phi) (1 -1 2) nil (=) nil (+) nil) (nil (0 2) (- -) (sgnf expf) nil nil nil) ((z phi z phi) nil (get-sbits) (expt) nil nil nil) ((phi) (2) (1-) nil nil nil nil) (nil nil (get-ebits) nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::repp (nil nil nil nil (and) nil nil) (nil nil nil (exactp <= <=) nil nil nil) ((x) nil (get-sbits expo expo) (- expt) nil nil nil) ((phi x x) (1 2) (1-) (expt) nil nil nil) (nil (2) (1- get-ebits) nil nil nil nil) ((phi) nil (get-ebits) nil nil nil nil) ((phi) nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::cat (nil nil nil (+) nil nil nil) ((y) nil nil (*) nil nil nil) ((x) nil nil (expt) nil nil nil) ((n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel1/lib3/reps.lisp::encode (nil nil nil nil (cat) nil nil) (nil nil (get-sbits) (*) (cat) nil nil) ((phi) nil (get-ebits sig) (+ expt) (if) nil nil) ((phi x) (0 1 2) (expo 1- 1-) (=) nil nil nil) ((x) (1) (sgn get-sbits) (expt) nil nil nil) ((x phi) (2) (1-) nil nil nil nil) (nil nil (get-ebits) nil nil nil nil)))