((/meta/meta-plus-lessp.lisp::cancel_plus-lessp$1 (nil nil nil nil (cond) nil nil) (nil nil ((and (consp (cadr x)) (eq (car (cadr x)) (quote binary-+))) (and (consp (caddr x)) (eq (car (caddr x)) (quote binary-+))) t) nil nil nil nil) ((x) nil nil (cond cond) nil nil nil) (nil nil ((fringe-occur (quote binary-+) (caddr x) (cadr x)) t (fringe-occur (quote binary-+) (cadr x) (caddr x)) t) nil nil nil nil) ((x x) nil nil nil (list list) nil nil) ((*0* *0*) nil (quote quote) nil (binary-op_tree-simple binary-op_tree-simple) nil nil) ((< <) (0 0) (quote quote) (del del) nil nil nil)) (/meta/meta-plus-lessp.lisp::cancel_plus-lessp (nil nil nil nil (if) nil nil) ((x) nil nil (and cond) nil nil nil) (nil nil (consp (and (consp (cadr x)) (eq (car (cadr x)) (quote binary-+)) (consp (caddr x)) (eq (car (caddr x)) (quote binary-+))) t) (eq) nil nil nil) ((x) nil (car quote cancel_plus-lessp$1) (let*) nil nil nil) ((x < x) nil nil ((lt-side (binary-op_fringe (quote binary-+) (cadr x)))) (if) nil nil) ((int x) nil (rt-side int) nil (list) nil nil) (nil nil (quote) (binary-op_fringe bagint) (binary-op_tree-simple binary-op_tree-simple) nil nil)))