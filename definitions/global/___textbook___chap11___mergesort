((/textbook/chap11/mergesort.lisp::split-list (nil nil nil nil (cond) nil nil) (nil nil ((atom x) (atom (cdr x)) t) nil nil nil nil) (nil nil nil (mv mv) (mv-let) nil nil) ((nil nil x nil) nil (a recursive-call) (mv) nil nil nil) ((b) nil (cddr) (cons cons) nil nil nil) ((x a b) nil (car cadr) nil nil nil nil) ((x x) nil nil nil nil nil nil)) (/textbook/chap11/mergesort.lisp::merge2 (nil nil nil nil nil (cond) nil) (nil nil ((atom x) (atom y) (< (car x) (car y)) t) nil nil nil nil) ((y x) nil nil (cons cons) nil nil nil) (nil nil (car car) (recursive-call recursive-call) nil nil nil) ((x y y x) nil (cdr cdr) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/mergesort.lisp::mergesort (nil nil nil nil (cond) nil nil) (nil nil ((atom x) (atom (cdr x)) t) nil nil nil nil) ((nil x) nil nil nil (mv-let) nil nil) (nil nil (a split-list) (merge2) nil nil nil) ((b x) nil (recursive-call recursive-call) nil nil nil nil) ((a b) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/mergesort.lisp::orderedp (nil nil nil (cond) nil nil nil) (nil nil ((atom (cdr x)) t) nil nil nil nil) ((t) nil nil (and) nil nil nil) (nil nil (recursive-call) (<=) nil nil nil) (nil nil (car cadr cdr) nil nil nil nil) ((x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))