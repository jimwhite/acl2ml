(nil (/rtl/rel8/support/support/rnd.lisp::sgn (nil nil nil nil (if) nil nil) (nil (0) nil (or) (if) nil nil) (nil (-1 1) (not) (equal <) nil nil nil) ((x x) (0 0) (rationalp) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/rnd.lisp::fp+ (nil nil nil (+) nil nil nil) ((x) nil nil (expt) nil nil nil) (nil (2) nil (-) nil nil nil) ((n) nil (1+) nil nil nil nil) (nil nil (expo) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/support/support/rnd.lisp::rnd-const (nil nil nil nil nil (case) nil) ((mode) nil ((near near+) (inf away) otherwise) nil nil nil nil) (nil (0) (1-) (expt) nil nil nil) (nil (2) nil (- expt) nil nil nil) ((e n) (2) (1+) nil nil nil nil) (nil nil nil (-) nil nil nil) ((e n) nil nil nil nil nil nil)) (/rtl/rel8/support/support/rnd.lisp::roundup (nil nil nil nil nil nil (case)) ((mode) nil (near+ near (inf away) otherwise) nil nil nil nil) ((nil) nil (not) (= and) nil nil nil) (nil (1) nil (bitn = or exactp) nil nil nil) ((x x n) (1) (not) (- bitn =) nil nil nil) ((n x) (1) (expo) (- exactp bitn) nil nil nil) ((x n x x) nil (expo 1+) (-) nil nil nil)))