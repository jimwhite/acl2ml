((/finite-set-theory/osets/difference.lisp::fast-difference-old (nil nil nil nil nil nil (cond)) (nil nil ((endp X) (endp Y) (equal (car X) (car Y)) (mbe :logic (<< (car X) (car Y)) :exec (fast-lexorder (car X) (car Y))) t) nil nil nil nil) ((nil X) nil nil (recursive-call cons recursive-call) nil nil nil) ((X) nil (cdr cdr car cdr) (recursive-call) nil nil nil) ((X Y X Y Y) nil (cdr) nil nil nil nil) ((X) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/finite-set-theory/osets/difference.lisp::fast-difference (nil nil nil nil nil nil (cond)) (nil nil ((endp X) (endp Y) (equal (car X) (car Y)) (mbe :logic (<< (car X) (car Y)) :exec (fast-lexorder (car X) (car Y))) t) nil nil nil nil) (nil nil nil (revappend revappend) (recursive-call recursive-call recursive-call) nil nil) ((acc nil acc X acc Y X acc) nil (cdr cdr cdr cdr) (cons) nil nil nil) ((X Y X acc Y) nil (car) nil nil nil nil) ((X) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))