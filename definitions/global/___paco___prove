((/paco/prove.lisp::apply-hints-clause1 (nil nil nil (cond) nil nil nil) (nil nil ((endp alist) t) nil nil nil nil) (nil nil nil (mv let) nil nil nil) ((cl pspv) nil nil ((key (car (car alist)))) nil nil nil) ((key) nil (val rcnst :USE :IN-THEORY :INDUCT :HANDS-OFF :EXPAND :DO-NOT otherwise) nil nil nil nil) (nil nil (cdr) nil (access recursive-call recursive-call recursive-call recursive-call recursive-call recursive-call recursive-call) nil nil) ((prove-spec-var pspv :rewrite-constant pspv cl cl cl cl cl cl pspv) nil (car cdr cdr cdr cdr cdr cdr cdr) (disjoin-clauses) nil (change change change change change) nil)) (/paco/prove.lisp::apply-hints-clause (nil nil nil (let) nil nil nil) (((temp (assoc-equal id (access prove-spec-var pspv :hint-settings)))) nil nil (cond) nil nil nil) (nil nil (temp t) nil nil nil nil) (nil nil nil nil (mv-let) (mv) nil) ((nil nil nil) nil (new-cl quote) nil (apply-hints-clause1) (mv) nil) ((new-pspv cl nil new-pspv MISS) nil (cdr quote list) nil nil (change) nil) ((temp prove-spec-var pspv :hint-settings HIT new-cl) nil nil (delete1-equal) nil nil nil)) (/paco/prove.lisp::apply-waterfall-process (nil nil nil nil (cond) nil nil) (nil nil ((member-eq process (access prove-spec-var pspv :do-not-processes)) (and (access prove-spec-var pspv :induct-hint-val) (not (equal (access prove-spec-var pspv :induct-hint-val) :do-not-induct)) (not (equal process (quote induct-clause)))) t) nil nil nil nil) (nil nil (<apply-waterfall-process-id>) nil nil (mv mv) nil) ((nil nil nil nil nil nil) nil (quote quote) nil nil nil nil) ((miss miss process) nil (apply-hints-clause simplify-clause settled-down-clause eliminate-destructors-clause induct-clause otherwise) nil nil nil nil) (nil nil nil nil nil (mv) (apply-hints-clause simplify-clause settled-down-clause eliminate-destructors-clause induct-clause)) ((id cl hist pspv wrld id cl hist pspv wrld id cl hist pspv wrld id cl hist pspv wrld id cl hist pspv wrld nil pspv) nil (quote list) nil nil nil nil)) (/paco/prove.lisp::scan-proof-attempt (nil nil nil nil (mv-let) nil nil) (nil nil (errors) (cond) (scan-proof-attempt1) nil nil) ((subgoals p nil nil) nil ((and (null errors) (null subgoals)) t) nil nil nil nil) ((:QED) nil nil nil (list) nil nil) ((:FAILURE) nil nil (cons cons) nil nil nil) ((:ERRORS errors :SUBGOALS subgoals) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/paco/prove.lisp::condense-proof-attempt (nil nil nil (let) nil nil nil) (((temp (scan-proof-attempt p))) nil nil nil (cond) nil nil) (nil nil ((eq temp :QED) (and (consp temp) (null (cdr (assoc-eq :ERRORS (cdr temp))))) t) nil nil nil nil) ((temp) nil (condense-proof-attempt1 condense-proof-attempt1) nil nil nil nil) ((p p) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/paco/prove.lisp::describe-proof-attempt (nil nil nil nil nil (case) nil) ((d-level) nil (0 1 otherwise) nil nil nil nil) ((p) nil (scan-proof-attempt condense-proof-attempt) nil nil nil nil) ((p p) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/paco/prove.lisp::prove1 (nil nil nil nil nil nil nil) ((*waterfall* nil nil pspv wrld waterfall-depth) nil (list) nil nil nil nil) ((term) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/paco/prove.lisp::make-initial-pspv (nil nil nil nil nil nil nil) ((prove-spec-var :rewrite-constant :induct-hint-val nil :induction-hyp-terms nil :induction-concl-terms nil :do-not-processes nil :hint-settings hint-settings :global-ens ens) nil nil nil nil nil nil) ((rewrite-constant :expand-lst nil :terms-to-be-ignored-by-rewrite nil :top-clause nil :current-clause nil :ens ens :current-literal nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/paco/prove.lisp::prove (nil nil (<prove-id>) nil nil nil nil) (nil nil nil nil nil (prove1) nil) ((term wrld waterfall-depth) nil nil (make-initial-pspv) nil nil nil) ((ens hint-settings) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))