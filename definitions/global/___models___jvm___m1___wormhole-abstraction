((/models/jvm/m1/wormhole-abstraction.lisp::ok-inputs (nil nil (natp) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::! (nil nil nil nil (if) nil nil) (nil (1) (zp) (*) nil nil nil) ((n n) nil (recursive-call) nil nil nil nil) (nil nil nil (-) nil nil nil) ((n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::theta (nil nil (!) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::helper (nil nil nil nil (if) nil nil) ((a) nil (zp) (recursive-call) nil nil nil) ((n) nil nil (- *) nil nil nil) ((n n a) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::fn (nil nil nil (helper) nil nil nil) ((n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::loop-clk (nil nil nil nil (if) nil nil) (nil (3) (zp) (clk+) nil nil nil) ((n) (13) (recursive-call) nil nil nil nil) (nil nil nil (-) nil nil nil) ((n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::clk (nil nil nil (clk+) nil nil nil) (nil (2) (loop-clk) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::poised-to-loop (nil nil nil nil nil nil nil) (nil nil (acl2::true-listp natp natp) (equal equal equal equal) nil nil nil) ((s *pi* n n) (4 2) (len pc program) (nth nth) nil nil nil) ((s s s) (0 1) (locals locals) nil nil nil nil) ((s s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::loop-hint (nil nil nil nil (if) nil nil) (nil nil (zp) (list recursive-call) nil nil nil) ((n n s) nil nil (- m1) nil nil nil) ((n s) (1 13) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::fact-loop-locals (nil nil (locals) nil nil nil nil) (nil nil nil (m1) nil nil nil) ((s) nil (loop-clk) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::poised-for-fact (nil nil nil nil nil nil nil) (nil nil (acl2::true-listp natp) (equal equal equal equal) nil nil nil) ((s *pi* n n) (4 0) (len pc program) (nth) nil nil nil) ((s s s) (0) (locals) nil nil nil nil) ((s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/wormhole-abstraction.lisp::fact-locals (nil nil (locals) nil nil nil nil) (nil nil nil (m1) nil nil nil) ((s) nil (clk) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))