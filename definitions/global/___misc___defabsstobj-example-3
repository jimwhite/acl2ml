((/misc/defabsstobj-example-3.lisp::update-misc1 (nil nil nil nil (if) nil nil) (nil nil nil (eql update-misc$c update-misc$c) nil nil nil) ((v1 st$c v1 st$c) (0 0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::update-misc2 (nil nil nil (let) nil nil nil) (((st$c (update-misc1 v2 st$c))) nil nil (mv) nil nil nil) ((v2 st$c) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::update-misc3 (nil nil nil nil nil (mv-let) nil) ((st$c) nil (k declare) nil (if) nil nil) ((st$c) nil (ignore) (eql update-misc2 update-misc2) nil nil nil) ((v st$c v st$c k) (7 25) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::update-misc4 (nil nil nil nil (if) nil nil) (nil nil nil (eql update-misc3 update-misc1) nil nil nil) ((v st$c v st$c) (0 0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::st$cp+ (nil nil nil (and) nil nil nil) (nil nil (st$cp mem$c-entryp) nil nil nil nil) ((st$c) nil nil (mem$ci) nil nil nil) ((st$c) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::map$ap (nil nil nil nil (cond) nil nil) (nil nil ((atom x) (atom (car x)) t) nil nil nil nil) ((nil) nil (null) nil nil nil (and)) ((x) nil (natp natp mem$c-entryp recursive-call) (<) nil nil nil) (nil (50) (caar caar cdar cdar cdr) nil nil nil nil) ((x x x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::st$ap (nil nil nil nil (and) nil nil) (nil nil (true-listp map$ap) (equal) nil nil nil) ((x) (2) (len) (nth) nil nil nil) ((x x) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::misc$a (nil nil nil (nth) nil nil nil) ((st$a) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::update-misc$a (nil nil nil nil (update-nth) nil nil) ((v st$a) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::lookup$a (nil nil nil (let*) nil nil nil) (nil nil ((map (nth 1 st$a))) nil (if) nil nil) ((pair) (0) (pair cdr) nil nil nil nil) ((pair) nil nil (assoc) nil nil nil) ((k map) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::update$a (nil nil nil nil (update-nth) nil nil) ((st$a) (1) nil nil (put-assoc) nil nil) ((k val) nil nil (nth) nil nil nil) ((st$a) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::corr-mem (nil nil nil (cond) nil nil nil) (nil nil ((zp n) t) nil nil nil nil) ((t) nil nil (let) nil nil nil) (((i (1- n))) nil nil (and) nil nil nil) (nil nil nil (equal) (recursive-call) nil nil) ((i st$c st$a) nil nil (mem$ci lookup$a) nil nil nil) ((i st$c i st$a) nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::st$corr (nil nil nil nil nil (and) nil) (nil nil (st$cp+ st$ap) (equal) (corr-mem) nil nil) ((st$c st$a st$c st$a) (50) (misc$c misc$a) nil nil nil nil) ((st$c st$a) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-3.lisp::update-misc5 (nil nil nil (let) nil nil nil) (((st$c (update-misc1 v st$c))) nil nil (update-misc1) nil nil nil) ((v st$c) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))