((/taspi/tree-score/efficient-pscores-help.lisp::small-integerp (nil nil nil nil (and) nil nil) (nil nil (integerp) (< <=) nil nil nil) ((x x i-max x) nil (-) nil nil nil nil) ((i-max) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::small-integer-listp (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((list) nil (small-integerp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((list list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::small-integer-list-listp (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((list) nil (small-integer-listp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((list list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::map-to-small-integer-list-listp (nil nil nil nil (if) nil nil) ((t) nil (consp) nil (and) nil nil) ((list) nil (consp small-integer-list-listp recursive-call) nil nil nil nil) (nil nil (car cdar cdr) nil nil nil nil) ((list list list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::good-len-list (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((list) nil nil (equal recursive-call) nil nil nil) ((n n) nil (len cdr) nil nil nil nil) ((list) nil (car) nil nil nil nil) ((list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::good-len-lists (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((list1) nil nil (good-len-list good-len-list) nil nil nil) ((list2) nil (len cdr len) nil nil nil nil) ((list1) nil (car car) nil nil nil nil) ((list1 list1) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::good-len-list-mapping (nil nil nil nil (if) nil nil) ((t) nil (consp) nil nil (and) nil) ((maplist) nil (consp consp) (equal recursive-call) nil nil nil) ((n n) nil (car cdar len cdr) nil nil nil nil) ((maplist maplist maplist) nil (cadar) nil nil nil nil) ((maplist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::good-len-lists-mapping (nil nil nil nil (if) nil nil) ((t) nil (consp) nil nil (and) nil) ((maplist) nil (consp consp) (good-len-list good-len-list-mapping) nil nil nil) ((list2) nil (car cdar len len cdr) nil nil nil nil) ((maplist maplist maplist) nil (cadar cadar) nil nil nil nil) ((maplist maplist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/efficient-pscores-help.lisp::matching-lens (nil nil nil nil (if) nil nil) (nil nil (consp not) nil (and) nil nil) ((list1) nil (consp consp) (equal recursive-call) nil nil nil) ((list2 list2) nil (len len cdr cdr) nil nil nil nil) ((list1 list2) nil (car car) nil nil nil nil) ((list1 list2) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))