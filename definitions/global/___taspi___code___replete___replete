((/taspi/code/replete/replete.lisp::replete-trees (nil nil nil (cond) nil nil nil) (nil nil ((atom args) t) nil nil nil nil) ((db) nil nil nil (recursive-call) nil nil) ((parent) nil (cdr) (cond) nil nil nil) ((args) nil ((atom (car args)) t) nil nil nil nil) ((db) nil nil (let*) nil nil nil) (nil nil ((p (het (car args) db))) nil (hut) nil nil)) (/taspi/code/replete/replete.lisp::replete-trees-list-top1 (nil nil nil (cond) nil nil nil) (nil nil ((atom l) t) nil nil nil nil) ((db) nil nil (recursive-call) nil nil nil) (nil nil (cdr) (let) nil nil nil) ((l (p (het (car l) db))) nil nil (cond) nil nil nil) (nil nil (p t) nil nil nil nil) (nil nil nil nil (hut hut) nil nil)) (/taspi/code/replete/replete.lisp::replete-trees-list-top (nil nil nil (replete-trees-list-top1) nil nil nil) ((l) nil (quote) nil nil nil nil) ((*replete-trees-list-top*) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/code/replete/replete.lisp::sum-frequencies-list-measure (nil nil nil nil (if) nil nil) (nil (0) (atom) nil (make-ord) nil nil) ((l) (1) (len) (+) nil nil nil) ((l) (1) (nfix) nil nil nil nil) (nil nil nil (-) nil nil nil) (nil nil (biggest-cdr smallest-in-list) nil nil nil nil) ((db l) nil nil nil nil nil nil)) (/taspi/code/replete/replete.lisp::frequency-measure (nil nil nil nil (make-ord) nil nil) (nil (1 0) nil (+) nil nil nil) (nil (1) (nfix) nil nil nil nil) (nil nil nil (-) nil nil nil) (nil nil (biggest-cdr acl2-count) nil nil nil nil) ((db x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))