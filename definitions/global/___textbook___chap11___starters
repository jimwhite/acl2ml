((/textbook/chap11/starters.lisp::f (nil nil nil nil (if) nil nil) (nil (0) (endp 1+) nil nil nil nil) ((x) nil (recursive-call) nil nil nil nil) (nil nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::f1 (nil nil nil nil (if) nil nil) (nil (0) (null 1+) nil nil nil nil) ((x) nil (recursive-call) nil nil nil nil) (nil nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::app (nil nil nil nil (if) nil nil) ((y) nil (endp) (cons) nil nil nil) ((x) nil (car) (recursive-call) nil nil nil) ((x y) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::rev (nil nil nil nil (if) nil nil) ((nil) nil (endp) (app) nil nil nil) ((x) nil (recursive-call list) nil nil nil nil) (nil nil (cdr car) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::flatten (nil nil nil (cond) nil nil nil) (nil nil ((atom x) t) nil nil nil nil) (nil nil (list) (app) nil nil nil) ((x) nil (recursive-call recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::swap-tree (nil nil nil nil (if) nil nil) ((x) nil (atom) (cons) nil nil nil) ((x) nil (recursive-call recursive-call) nil nil nil nil) (nil nil (cdr car) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::flat (nil nil nil nil (cond) nil nil) (nil nil ((atom x) (atom (car x)) t) nil nil nil nil) (nil nil (list recursive-call) (cons) nil nil nil) ((x) nil (car recursive-call) (cons) nil nil nil) ((x) nil (cdr caar) (cons) nil nil nil) ((x x) nil (cdar cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::BINARY-APPEND (nil nil (DECLARE) nil nil nil nil) (nil nil nil (XARGS) nil nil nil) ((:GUARD) nil (TRUE-LISTP) nil nil nil nil) ((X) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::REVAPPEND (nil nil (DECLARE) nil nil nil nil) (nil nil nil (XARGS) nil nil nil) ((:GUARD) nil (TRUE-LISTP) nil nil nil nil) ((X) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/starters.lisp::REVERSE (nil nil (DECLARE) nil nil nil nil) (nil nil nil (XARGS) nil nil nil) ((:GUARD) nil nil (OR) nil nil nil) (nil nil (TRUE-LISTP STRINGP) nil nil nil nil) ((X X) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))