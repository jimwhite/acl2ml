((/misc/defabsstobj-example-1.lisp::st$cp+ (nil nil nil (and) nil nil nil) (nil nil (st$cp mem$c-entryp) nil nil nil nil) ((st$c) nil nil (mem$ci) nil nil nil) ((st$c) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::map$ap (nil nil nil nil (cond) nil nil) (nil nil ((atom x) (atom (car x)) t) nil nil nil nil) ((nil) nil (null) nil nil nil (and)) ((x) nil (natp natp mem$c-entryp recursive-call) (<) nil nil nil) (nil (50) (caar caar cdar cdar cdr) nil nil nil nil) ((x x x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::st$ap (nil nil nil nil (and) nil nil) (nil nil (true-listp map$ap) (equal) nil nil nil) ((x) (2) (len) (nth) nil nil nil) ((x x) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::misc$a (nil nil nil (nth) nil nil nil) ((st$a) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::update-misc$a (nil nil nil nil (update-nth) nil nil) ((v st$a) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::lookup$a (nil nil nil (let*) nil nil nil) (nil nil ((map (nth 1 st$a))) nil (if) nil nil) ((pair) (0) (pair cdr) nil nil nil nil) ((pair) nil nil (assoc) nil nil nil) ((k map) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::update$a (nil nil nil nil (update-nth) nil nil) ((st$a) (1) nil nil (put-assoc) nil nil) ((k val) nil nil (nth) nil nil nil) ((st$a) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::corr-mem (nil nil nil (cond) nil nil nil) (nil nil ((zp n) t) nil nil nil nil) ((t) nil nil (let) nil nil nil) (((i (1- n))) nil nil (and) nil nil nil) (nil nil nil (equal) (recursive-call) nil nil) ((i st$c st$a) nil nil (mem$ci lookup$a) nil nil nil) ((i st$c i st$a) nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::st$corr (nil nil nil nil nil (and) nil) (nil nil (st$cp+ st$ap) (equal) (corr-mem) nil nil) ((st$c st$a st$c st$a) (50) (misc$c misc$a) nil nil nil nil) ((st$c st$a) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/defabsstobj-example-1.lisp::foo (nil nil nil nil nil nil nil) (nil nil nil (lookup lookup lookup lookup lookup3 lookup3 lookup3 lookup3 lookup4 lookup4 lookup4 lookup4 lookup5 lookup5 lookup5 lookup5) nil nil nil) ((st st3 st4 st5 st st3 st4 st5 st st3 st4 st5 st st3 st4 st5) (7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))