((/make-event/proof-by-arith.lisp::proof-by-arith-1 (nil nil nil (cond) nil nil nil) (nil nil ((endp book-alist) t) nil nil nil nil) (nil nil (silent-error) (let*) nil nil nil) ((state) nil nil nil (mv-let) nil ((pair (car book-alist)))) (nil nil (book extra-events in-certify-book encap-event final-encap-event) (erp cond) nil (trans-eval) nil) ((trans-ans state encap-event ctx state t) nil (car cdr ` (or erp (car (cdr trans-ans))) t) (f-get-global cond) nil nil nil) ((pair pair state) nil (quote in-certify-book t value) nil nil (encapsulate recursive-call) nil)))