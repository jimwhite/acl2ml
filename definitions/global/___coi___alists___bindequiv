((/coi/alists/bindequiv.lisp::bindequiv (nil nil nil (and) nil nil nil) (nil nil nil nil (assoc-equiv assoc-equiv) nil nil) ((x y y x) nil (keys keys) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/bindequiv.lisp::assoc-transparent (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((alist) nil nil (implies) (recursive-call) nil nil) ((key value) nil (cdr) (equal equal) nil nil nil) ((key value alist) nil (caar cdar) nil nil nil nil) ((alist alist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/bindequiv.lisp::unified-domain-binding (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((domain) nil nil (recursive-call) (assoc-transparent) nil nil) ((alist alist) nil (car cdr cdr) nil nil nil nil) ((domain domain) nil nil (assoc) nil nil nil) ((alist) nil (car) nil nil nil nil) ((domain) nil nil nil nil nil nil)) (/coi/alists/bindequiv.lisp::cross-domain-binding (nil nil nil nil (if) nil nil) ((t) nil (consp) (let) nil nil nil) ((domain (key (car domain))) nil nil (and) nil nil nil) (nil nil nil (implies) (recursive-call) nil nil) ((x y) nil (cdr) (list::memberp) (assoc-transparent) nil nil) ((key key y domain) nil (alist::keys cdr) nil nil nil nil) ((x) nil nil (assoc) nil nil nil)) (/coi/alists/bindequiv.lisp::equiv-domain-binding (nil nil nil (and) nil nil nil) (nil nil nil nil (cross-domain-binding cross-domain-binding) nil nil) ((domain x y domain y x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))