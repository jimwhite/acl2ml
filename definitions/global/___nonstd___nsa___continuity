((/nonstd/nsa/continuity.lisp::find-zero-n (nil nil nil nil (if) nil nil) (nil nil (realfix) nil nil nil (recursive-call)) ((z n eps a) nil (realp integerp integerp realp 1+) (< < < +) nil nil nil) ((a i n i n eps eps z a eps i) (0) (rcfn) nil nil nil nil) (nil nil nil (+) nil nil nil) ((a eps) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/continuity.lisp::find-zero-n-2 (nil nil nil nil (if) nil nil) (nil nil (realfix) nil nil nil (recursive-call)) ((z n eps a) nil (realp integerp integerp realp 1+) (< < < +) nil nil nil) ((a i n i n eps eps z a eps i) (0) (rcfn) nil nil nil nil) (nil nil nil (+) nil nil nil) ((a eps) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/continuity.lisp::find-max-rcfn-x-n (nil nil nil nil (if) nil nil) ((max-x) nil nil nil (if) nil nil) (nil nil (integerp integerp realp realp) (<= < >) nil nil (recursive-call recursive-call)) ((i n i n a eps eps a n eps a max-x n eps) (0) (rcfn rcfn 1+ 1+) (+) nil nil nil) ((max-x a i i) nil nil (+ *) nil nil nil) ((a i eps) nil nil (*) nil nil nil) ((i eps) nil nil nil nil nil nil)) (/nonstd/nsa/continuity.lisp::upper-bound-of-grid (nil nil nil nil (if) nil nil) ((i) nil nil nil nil (and) (recursive-call)) ((a x n eps) nil (integerp integerp 1+) (< <=) nil nil nil) ((i n i n x i) nil nil (+) nil nil nil) ((a) nil nil (*) nil nil nil) ((i eps) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/continuity.lisp::find-min-rcfn-x-n (nil nil nil nil (if) nil nil) ((min-x) nil nil nil (if) nil nil) (nil nil (integerp integerp realp realp) (<= < <) nil nil (recursive-call recursive-call)) ((i n i n a eps eps a n eps a min-x n eps) (0) (rcfn rcfn 1+ 1+) (+) nil nil nil) ((min-x a i i) nil nil (+ *) nil nil nil) ((a i eps) nil nil (*) nil nil nil) ((i eps) nil nil nil nil nil nil)))