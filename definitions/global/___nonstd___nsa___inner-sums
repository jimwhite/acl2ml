((/nonstd/nsa/inner-sums.lisp::row-expansion-inner (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <= binop) (recursive-call) nil nil) ((j n j j n i j i n) (0) (1+) nil nil nil nil) ((j) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <=) (recursive-call) nil nil) ((i m i i m m n) (0) (1+) nil (row-expansion-inner) nil nil) ((i n i) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-inner (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <= binop) (recursive-call) nil nil) ((i m i i m i j j m) (0) (1+) nil nil nil nil) ((i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <=) (recursive-call) nil nil) ((j n j j n m n) (0) (1+) nil (col-expansion-inner) nil nil) ((j m j) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer-lt (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <=) (recursive-call) nil nil) ((i m i i m m n) (0) (1+) nil (row-expansion-inner) nil nil) ((i i) (0) nil nil (if) nil nil) ((i n) nil nil (<) nil nil nil) ((i n) nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer-lt (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <=) (recursive-call) nil nil) ((j n j j n m n) (0) (1+) nil (col-expansion-inner) nil nil) ((j j m j) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::lt-binop (nil nil nil nil (if) nil nil) (nil (0) nil (< binop) nil nil nil) ((i j i j) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-inner-using-lt (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <= lt-binop) (recursive-call) nil nil) ((j n j j n i j i n) (0) (1+) nil nil nil nil) ((j) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer-using-lt (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <=) (recursive-call) nil nil) ((i m i i m m n) (0) (1+) nil (row-expansion-inner-using-lt) nil nil) ((i n i) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-inner-using-lt (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <= lt-binop) (recursive-call) nil nil) ((i m i i m i j j m) (0) (1+) nil nil nil nil) ((i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer-using-lt (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <=) (recursive-call) nil nil) ((j n j j n m n) (0) (1+) nil (col-expansion-inner-using-lt) nil nil) ((j m j) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer-m=n-aux (nil nil nil nil (row-expansion-outer) nil nil) ((i n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer-m=n-aux (nil nil nil nil (col-expansion-outer) nil nil) ((j n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer-m=n (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <= recursive-call) nil nil nil) ((i n i i n n) (0) (1+) nil (row-expansion-inner) nil nil) ((i n i) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer-m=n (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <= recursive-call) nil nil nil) ((j n j j n n) (0) (1+) nil (col-expansion-inner) nil nil) ((j n j) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer-lt-m=n-aux (nil nil nil nil (row-expansion-outer-lt) nil nil) ((i n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer-lt-m=n-aux (nil nil nil nil (col-expansion-outer-lt) nil nil) ((j n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::row-expansion-outer-lt-m=n (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <= recursive-call) nil nil nil) ((i n i i n n) (0) (1+) nil (row-expansion-inner) nil nil) ((i i) (0) nil nil (if) nil nil) ((i n) nil nil (<) nil nil nil) ((i n) nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::col-expansion-outer-lt-m=n (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp sumlist) (<= <= recursive-call) nil nil nil) ((j n j j n n) (0) (1+) nil (col-expansion-inner) nil nil) ((j j n j) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::expansion-oneop (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp oneop) (<= <= recursive-call) nil nil nil) ((i n i i n i n) (0) (1+) nil nil nil nil) ((i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/nsa/inner-sums.lisp::expansion-oneop-times-zeroop (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <= * recursive-call) nil nil nil) ((i n i i n zeroop n) (0) (oneop 1+) nil nil nil nil) ((i i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))