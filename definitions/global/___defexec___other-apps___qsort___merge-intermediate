((/defexec/other-apps/qsort/merge-intermediate.lisp::merge-func (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (if) nil nil) ((x) nil nil (and cons) (if) nil nil) (nil nil (last-val) (<<= << snoc and snoc) (if) nil nil) ((splitter splitter x) nil (first last-val first last-val) (recursive-call <<= <<= recursive-call and cons cons) nil nil nil) ((x x splitter x splitter splitter splitter x) nil (del-last first last-val del-last first first) (<< << recursive-call snoc) nil nil nil) ((x x x splitter splitter x splitter x) nil (rest first last-val rest last-val) (recursive-call) nil nil nil)) (/defexec/other-apps/qsort/merge-intermediate.lisp::walk (nil nil nil nil (if) nil nil) (nil (0) (endp) nil (if) nil nil) ((x) nil (1+) (and) (if) nil nil) (nil nil nil (<<= << recursive-call and recursive-call) (if) nil nil) ((splitter splitter splitter splitter) nil (first last-val del-last del-last 1+ 1+) (<<= <<= and) nil nil nil) ((x x splitter splitter x) nil (rest first last-val) (<< << recursive-call recursive-call) nil nil nil) ((x x x splitter splitter splitter splitter) nil (first last-val rest del-last) nil nil nil nil)) (/defexec/other-apps/qsort/merge-intermediate.lisp::intermediate-in-situ-qsort-fn (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (if) nil nil) ((lst) nil (endp list) (let) nil nil nil) (nil nil (rest first (merge (merge-func lst (first lst)))) nil (if) nil nil) ((lst lst) nil (ndx zp) (cons append) nil nil nil) ((ndx) nil (first recursive-call recursive-call recursive-call) (walk) nil nil nil) ((lst lst) nil (first rest) (first-n last-n) nil nil nil)) (/defexec/other-apps/qsort/merge-intermediate.lisp::in-situ-qsort-fn (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (if) nil nil) ((lst) nil (endp list) (let) nil nil nil) (nil nil (rest first (merge (merge-func lst (first lst)))) nil (if) nil nil) ((lst lst) nil (ndx zp) (cons let*) nil nil nil) ((ndx) nil (first recursive-call (upper (in-situ-qsort-fn (last-n ndx merge)))) (walk append) nil nil nil) ((lst merge lower upper) nil (first rest lower) nil nil nil nil)))