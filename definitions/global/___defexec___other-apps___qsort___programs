((/defexec/other-apps/qsort/programs.lisp::alloc-qs (nil nil nil (resize-objs) nil nil nil) ((N qstor) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::load-qs (nil nil nil nil (if) nil nil) ((qstor) nil (zp) (let) nil nil nil) ((N (qstor (update-objsi lo (first x) qstor))) nil nil nil nil (recursive-call) nil) ((qstor) nil (rest 1+ 1-) nil nil nil nil) ((x lo N) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::extract-qs (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) (and) nil nil) (nil nil (natp natp) (<= objsi) (recursive-call) nil nil) ((lo hi lo hi lo qstor hi qstor) nil (1+) nil nil nil nil) ((lo) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::swap (nil nil nil (let*) nil nil nil) ((qstor) nil nil ((temp (objsi i qstor))) nil nil nil) (nil nil (qstor qstor) nil nil nil nil) (nil nil nil nil (update-objsi update-objsi) nil nil) ((i qstor j temp qstor) nil nil (objsi) nil nil nil) ((j qstor) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::ndx< (nil nil nil nil (if) nil nil) ((t) nil nil (and <) nil nil nil) ((x y) nil (natp natp) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::ndx<= (nil nil nil nil (if) nil nil) ((t) nil nil (and <=) nil nil nil) ((x y) nil (natp natp) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::split-qs (nil nil nil nil (if) nil nil) (nil nil nil (ndx< mv let*) nil nil nil) ((hi lo lo qstor) nil nil ((swap-lo (<<= splitter (objsi lo qstor)))) nil (recursive-call) nil) ((splitter qstor) nil (swap-hi qstor) nil (if if) nil nil) ((lo hi) nil (1+ 1-) (<< implies implies) (if) nil nil) ((splitter qstor swap-lo swap-hi lo swap-hi swap-lo hi) nil nil (objsi and) (swap) nil nil) ((hi qstor swap-lo swap-hi lo hi qstor) nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::sort-qs (nil nil nil nil (if) nil nil) ((qstor) nil nil (ndx<=) (mv-let) nil nil) ((hi lo) nil (index) nil (if) (split-qs) nil) ((qstor lo hi qstor) nil nil (objsi ndx<= let*) (recursive-call) nil nil) ((lo qstor index lo hi qstor qstor) nil (1+ (qstor (sort-qs index hi qstor))) nil nil nil nil) ((lo) nil (qstor) nil nil nil nil) (nil nil nil nil (recursive-call) nil nil)) (/defexec/other-apps/qsort/programs.lisp::qsort (nil nil nil nil (if) nil nil) ((nil) nil (endp) (with-local-stobj) nil nil nil) ((x qstor) nil nil nil (mv-let) nil nil) ((rslt) nil (rslt) (let*) nil nil nil) ((qstor) nil nil (mv) ((size (length x))) nil nil) ((qstor) nil (qstor qstor qstor) nil (extract-qs) nil nil) ((qstor) (0) (1-) (alloc-qs) (sort-qs) (load-qs) nil)) (/defexec/other-apps/qsort/programs.lisp::insert (nil nil nil nil (if) nil nil) (nil nil nil (or cons cons) nil nil nil) ((e x) nil (atom first) (<< recursive-call) nil nil nil) ((x e x e) nil (first rest) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/qsort/programs.lisp::isort (nil nil nil nil (if) nil nil) ((nil) nil (atom) (insert) nil nil nil) ((x) nil (first recursive-call) nil nil nil nil) ((x) nil (rest) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))