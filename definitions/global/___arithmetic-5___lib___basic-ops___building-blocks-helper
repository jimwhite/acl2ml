((/arithmetic-5/lib/basic-ops/building-blocks-helper.lisp::power-of-2-measure (nil nil nil nil (cond) nil nil) (nil nil ((or (not (real/rationalp x)) (<= x 0)) (< x 1) t) nil nil nil nil) (nil (0) nil (cons floor) nil nil nil) ((x) (1) nil (cons floor) nil nil nil) (nil (1 1 1) (/) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/arithmetic-5/lib/basic-ops/building-blocks-helper.lisp::power-of-2-helper (nil nil nil nil nil nil (cond)) (nil nil ((or (not (real/rationalp x)) (<= x 0)) (< x 1) (<= 2 x) (equal x 1) t) nil nil nil nil) (nil (0 0 0) nil (+ +) nil nil nil) (nil (-1 1) (recursive-call recursive-call) nil nil nil nil) (nil nil nil (* *) nil nil nil) ((x 1/2 x) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil)))