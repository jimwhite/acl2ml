((/misc/radix.lisp::ilog (nil nil nil nil (if) nil nil) (nil (0) nil nil (or if) nil nil) (nil (0) (zp zp 1+) (< <) nil nil nil) ((x base base x base) (2) nil (recursive-call) nil nil nil) ((base) nil nil (floor) nil nil nil) ((x base) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::int2hex-lst (nil nil nil nil (if) nil nil) ((ans) nil (zp) nil nil (recursive-call) nil) ((len cap) nil (1-) (floor cons) nil nil nil) ((x len ans) (16) nil (hex-digit) nil nil nil) ((cap) nil nil (mod) nil nil nil) ((x) (16) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::int2hex (nil nil nil (coerce) nil nil nil) (nil nil (quote) nil nil (int2hex-lst) nil) ((x len cap nil string) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::hex-print-size (nil nil (1+) nil nil nil nil) (nil nil nil (ilog) nil nil nil) ((x) (16) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::nat2hex (nil nil nil nil (int2hex) nil nil) ((x cap) nil (hex-print-size) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::convert-radix-lst (nil nil nil nil (if) nil nil) ((ans) nil (zp) nil nil (recursive-call) nil) ((len base) nil (1-) (floor cons) nil nil nil) ((x base len ans) nil (digit-to-char) nil nil nil nil) (nil nil nil (mod) nil nil nil) ((x base) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::convert-int-radix (nil nil nil (coerce) nil nil nil) (nil nil (quote) nil nil (convert-radix-lst) nil) ((x n r nil string) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::radix-print-size (nil nil (1+) nil nil nil nil) (nil nil nil (ilog) nil nil nil) ((x base) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::convert-nat-radix (nil nil nil nil (convert-int-radix) nil nil) ((x r) nil nil (radix-print-size) nil nil nil) ((x r) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::nat2bin (nil nil nil (convert-nat-radix) nil nil nil) ((x) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::nat2oct (nil nil nil (convert-nat-radix) nil nil nil) ((x) (8) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::int2bin (nil nil nil nil (convert-int-radix) nil nil) ((x len) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/misc/radix.lisp::int2oct (nil nil nil nil (convert-int-radix) nil nil) ((x len) (8) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))