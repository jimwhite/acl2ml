((/nonstd/fft/fft-omega.lisp::p-depth (nil nil nil nil (if) nil nil) (nil (0) (powerlist-p 1+) nil nil nil nil) ((x) nil (recursive-call) nil nil nil nil) (nil nil (p-untie-l) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/fft/fft-omega.lisp::p-ft-omega (nil nil nil (eval-poly) nil nil nil) ((x) nil (p-omega) nil nil nil nil) (nil nil (p-depth) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/fft/fft-omega.lisp::p-fft-omega (nil nil nil nil (if) nil nil) (nil nil (powerlist-p fix) (p-tie) nil nil nil) ((x x) nil nil (p-+ p--) nil nil nil) (nil nil (recursive-call recursive-call) (p-* p-*) nil nil nil) (nil nil (p-unzip-l p-omega-sqrt recursive-call p-unzip-l p-omega-sqrt recursive-call) nil nil nil nil) ((x x) nil (1- p-unzip-r 1- p-unzip-r) nil nil nil nil) ((x x) nil (p-depth p-depth) nil nil nil nil)))