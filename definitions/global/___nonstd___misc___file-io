((/nonstd/misc/file-io.lisp::collect-objects (nil nil nil nil (mv-let) nil nil) (nil nil nil (eofp read-object) (if) nil nil) ((obj state channel state eofp) nil nil (mv) (recursive-call) nil nil) ((state channel state) nil (reverse) (cons) nil nil nil) ((list obj list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/file-io.lisp::read-list (nil nil nil nil (mv-let) nil nil) (nil nil (channel) nil (open-input-channel if) nil nil) ((state fname :object state channel) nil nil nil (mv-let) (er) nil) ((soft ctx Unable to open file ~s0 for :object input. fname) nil (result) (let) (collect-objects) nil nil) ((state nil channel state (state (close-input-channel channel state))) nil (value) nil nil nil nil) ((result) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/file-io.lisp::pprint-object-or-string (nil nil nil nil (if) nil nil) (nil nil (stringp) nil (princ$) (mv-let) nil) ((obj obj channel state state) nil (declare) (erp state-global-let*) nil nil nil) ((val state (write-for-read t)) nil nil (pprogn ignore) nil nil nil) ((erp val) nil (value) nil nil nil (ppr2)) ((channel state t nil) (0) nil nil nil nil nil) ((obj print-base print-radix state t) (80 0) nil nil nil nil nil)) (/nonstd/misc/file-io.lisp::write-objects (nil nil nil nil (if) nil nil) ((state) nil (consp) nil nil nil (pprogn)) ((list state) nil nil (newline newline) (pprint-object-or-string recursive-call) nil nil) ((channel state channel state channel state channel state) nil (car cdr) nil nil nil nil) ((list list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/file-io.lisp::write-list (nil nil (write-list-body) nil nil nil nil) ((nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/file-io.lisp::write-list-downcase (nil nil (downcase) nil nil nil nil) (nil nil nil nil nil (write-list) nil) ((list fname ctx state) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))