((/models/jvm/m5/infinite-fair-schedule.lisp::movei (nil nil nil (cond) nil nil nil) (nil nil ((or (not (natp n)) (not (natp b)) (< n (+ b 1))) t) nil nil nil nil) (nil nil (nfix) (recursive-call) nil nil nil) ((n) nil nil (- +) nil nil nil) ((n b) (1) nil (+) nil nil nil) ((b) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m5/infinite-fair-schedule.lisp::moveb (nil nil nil (cond) nil nil nil) (nil nil ((or (not (natp n)) (not (natp b)) (< n (+ b 1))) t) nil nil nil nil) (nil nil (nfix) (recursive-call) nil nil nil) ((b) nil nil (- +) nil nil nil) ((n b) (1) nil (+) nil nil nil) ((b) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m5/infinite-fair-schedule.lisp::distex (nil nil nil (cond) nil nil nil) (nil nil ((or (not (natp a)) (not (natp b)) (<= b a)) t) nil nil nil nil) (nil (0) nil (+) nil nil nil) (nil nil nil (+ recursive-call) nil nil nil) ((a b) (1) nil (+) nil nil nil) ((a) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil)))