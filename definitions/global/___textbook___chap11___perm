((/textbook/chap11/perm.lisp::in (nil nil nil nil (cond) nil nil) (nil nil ((atom b) (equal a (car b)) t) nil nil nil nil) ((nil t) nil nil (recursive-call) nil nil nil) ((a) nil (cdr) nil nil nil nil) ((b) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/perm.lisp::del (nil nil nil nil (cond) nil nil) (nil nil ((atom x) (equal a (car x)) t) nil nil nil nil) ((nil) nil (cdr) (cons) nil nil nil) ((x) nil (car) (recursive-call) nil nil nil) ((x a) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/perm.lisp::perm (nil nil nil (cond) nil nil nil) (nil nil ((atom x) t) nil nil nil nil) (nil nil (atom) (and) nil nil nil) ((y) nil nil (in recursive-call) nil nil nil) ((y) nil (car cdr) (del) nil nil nil) ((x x y) nil (car) nil nil nil nil) ((x) nil nil nil nil nil nil)))