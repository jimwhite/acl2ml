((/coi/lists/set.lisp::setequiv (nil nil nil (and) nil nil nil) (nil nil nil (subsetx subsetx) nil nil nil) ((x y y x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/lists/set.lisp::setintersection (nil nil nil nil (if) nil nil) (nil nil (consp) nil (if if) nil nil) ((x nil x) nil (null) (memberp cons recursive-call) nil nil nil) ((y y y) nil (car car cdr) (recursive-call) nil nil nil) ((x x y x) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/lists/set.lisp::setdifference (nil nil nil nil (if) nil nil) (nil nil (consp) nil (if if) nil nil) ((x x nil) nil (null) (memberp recursive-call cons) nil nil nil) ((y y y) nil (car cdr car) (recursive-call) nil nil nil) ((x x x y) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))