((/centaur/misc/hons-extra.lisp::with-fast-alists-fn (nil nil nil nil (if) nil nil) ((form) nil (atom `) nil nil nil nil) ((alists) nil nil (with-fast-alist) nil nil nil) (nil nil (, ,) nil nil nil nil) (nil nil (car) (recursive-call) nil nil nil) ((alists form) nil (cdr) nil nil nil nil) ((alists) nil nil nil nil nil nil)) (/centaur/misc/hons-extra.lisp::alist-of-alistsp (nil nil nil nil (cond) nil nil) (nil nil ((atom lst) (and (consp (car lst)) (alistp (cdar lst))) t) nil nil nil nil) ((nil) nil (null recursive-call) nil nil nil nil) ((lst) nil (cdr) nil nil nil nil) ((lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/hons-extra.lisp::make-fast-alist-of-alists (nil nil nil (cond) nil nil nil) (nil nil ((atom lst) t) nil nil nil nil) ((lst) nil nil (let*) nil nil nil) (((current-entry (car lst))) nil nil (cond) nil nil nil) (nil nil ((atom current-entry) t) nil nil nil nil) (nil nil nil (prog2$ let*) nil nil nil) ((lst) nil nil ((current-entry-key (car current-entry))) (hons-acons) (er) nil)) (/centaur/misc/hons-extra.lisp::with-stolen-alists-fn (nil nil nil nil (if) nil nil) ((form) nil (atom `) nil nil nil nil) ((alists) nil nil (with-stolen-alist) nil nil nil) (nil nil (, ,) nil nil nil nil) (nil nil (car) (recursive-call) nil nil nil) ((alists form) nil (cdr) nil nil nil nil) ((alists) nil nil nil nil nil nil)) (/centaur/misc/hons-extra.lisp::fast-alists-free-on-exit-fn (nil nil nil nil (if) nil nil) ((form) nil (atom `) nil nil nil nil) ((alists) nil nil (fast-alist-free-on-exit) nil nil nil) (nil nil (, ,) nil nil nil nil) (nil nil (car) (recursive-call) nil nil nil) ((alists form) nil (cdr) nil nil nil nil) ((alists) nil nil nil nil nil nil)))