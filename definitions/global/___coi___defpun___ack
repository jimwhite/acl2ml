((/coi/defpun/ack.lisp::natural-listp (nil nil nil nil (if) nil nil) (nil nil (consp null) (and) nil nil nil) ((list list) nil (natp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((list list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/defpun/ack.lisp::ack_induction (nil nil nil nil (if) nil nil) (nil nil nil (cons) (ack_terminates if) nil nil) ((x y r s) nil nil (and + +) (if) nil nil) ((y y) (1 1) (not zp zp) nil (if) (recursive-call) nil) ((x x) nil (consp car cdr cdr zp) (+) nil (recursive-call recursive-call) nil) ((r r y r s y r s x) (1 1) (1- 1-) (cons cons) nil nil nil) ((x y r s) nil (1- 1-) nil nil nil nil)) (/coi/defpun/ack.lisp::head-equal (nil nil nil nil (if) nil nil) ((t) nil (consp) nil (and) nil nil) ((s) nil (consp) (equal recursive-call) nil nil nil) ((r) nil (car car cdr cdr) nil nil nil nil) ((s r s r) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/defpun/ack.lisp::list-equal (nil nil nil nil (if) nil nil) (nil nil (consp not) nil (and) nil nil) ((x) nil (consp consp) (equal recursive-call) nil nil nil) ((y y) nil (car car cdr cdr) nil nil nil nil) ((x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/defpun/ack.lisp::ak (nil nil nil nil (ack) nil nil) ((x y nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/defpun/ack.lisp::ak_terminates (nil nil nil nil (ack_terminates) nil nil) ((x y nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/defpun/ack.lisp::ak_measure (nil nil nil nil (ack_measure) nil nil) ((x y nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))