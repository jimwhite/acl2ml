((/rtl/rel8/lib/log.lisp::logop-2-induct-g (nil nil nil nil (if) nil nil) ((t) nil nil (and) (if) nil nil) ((t) nil (integerp integerp) (and recursive-call) nil nil nil) ((x y) nil (fl fl) (or or) nil nil nil) (nil nil nil (equal equal equal equal / /) nil nil nil) ((x x y y x y) (0 -1 0 -1 2 2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/lib/log.lisp::logop-2-n-induct (nil nil nil nil (if) nil nil) (nil nil (zp) (cons) (recursive-call) nil nil) ((n x y) nil (fl fl 1-) nil nil nil nil) ((n) nil nil (/ /) nil nil nil) ((x y) (2 2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel8/lib/log.lisp::logop-3-induct-g (nil nil nil nil (if) nil nil) ((t) nil nil nil (and if) nil nil) ((t) nil (integerp integerp integerp) nil (and recursive-call) nil nil) ((x y z) nil (fl fl fl) (or or or) nil nil nil) (nil nil nil (equal equal equal equal equal equal / / /) nil nil nil) ((x x y y z z x y z) (0 -1 0 -1 0 -1 2 2 2) nil nil nil nil nil) (nil nil nil nil nil nil nil)))