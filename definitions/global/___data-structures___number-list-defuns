((/data-structures/number-list-defuns.lisp::natural-listp (nil nil nil (cond) nil nil nil) (nil nil ((atom l) t) nil nil nil nil) (nil nil nil (eq and) nil nil nil) ((l nil) nil (naturalp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((l l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::maxlist (nil nil nil (cond) nil nil nil) (nil nil ((endp (cdr l)) t) nil nil nil nil) (nil nil (car) (max) nil nil nil) ((l) nil (car recursive-call) nil nil nil nil) ((l) nil (cdr) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::minlist (nil nil nil (cond) nil nil nil) (nil nil ((endp (cdr l)) t) nil nil nil nil) (nil nil (car) (min) nil nil nil) ((l) nil (car recursive-call) nil nil nil nil) ((l) nil (cdr) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::sum (nil nil nil (cond) nil nil nil) (nil nil ((endp l) t) nil nil nil nil) (nil (0) nil (+) nil nil nil) (nil nil (car recursive-call) nil nil nil nil) ((l) nil (cdr) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::excess-natural (nil nil nil nil (if) nil nil) (nil (0) (consp) (+) nil nil nil) ((l) (1) (maxlist) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::numerically-sorted (nil nil nil nil (cond) nil nil) (nil nil ((endp l) (endp (cdr l)) t) nil nil nil nil) ((t t) nil nil (and) nil nil nil) (nil nil (recursive-call) (<=) nil nil nil) (nil nil (car cadr cdr) nil nil nil nil) ((l l l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::numeric-insert (nil nil nil nil (cond) nil nil) (nil nil ((endp l) (< (car l) x) t) nil nil nil nil) (nil nil (list) (cons cons) nil nil nil) ((x x l) nil (car) (recursive-call) nil nil nil) ((l x) nil (cdr) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/data-structures/number-list-defuns.lisp::numeric-sort (nil nil nil (cond) nil nil nil) (nil nil ((endp l) t) nil nil nil nil) ((nil) nil nil (numeric-insert) nil nil nil) (nil nil (car recursive-call) nil nil nil nil) ((l) nil (cdr) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))