((/centaur/aig/three-four.lisp::pfoc-faig-eval-args (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((args) nil (recursive-call) nil (list) nil nil) (nil nil (quote car quote cdr) nil nil nil nil) ((faig-eval args env args) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/aig/three-four.lisp::pfoc-arg-casesplit-list (nil nil nil nil (if) nil nil) ((nil) nil (atom) nil (list*) nil nil) ((args) nil (` ` recursive-call) nil nil nil nil) (nil nil (cdr) (and and) nil nil nil) ((stable-under-simplificationp stable-under-simplificationp args) nil (quote quote) nil nil nil nil) (nil nil (:cases :cases) nil nil nil nil) (((aig-eval (car (, (car args))) env) (aig-eval (cdr (, (car args))) env)) nil nil nil nil nil nil)))