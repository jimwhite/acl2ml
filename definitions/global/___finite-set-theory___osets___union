((/finite-set-theory/osets/union.lisp::fast-union (nil nil nil nil nil nil (cond)) (nil nil ((endp x) (endp y) (equal (car x) (car y)) (mbe :logic (<< (car x) (car y)) :exec (fast-lexorder (car x) (car y))) t) nil nil nil nil) (nil nil nil (revappend revappend) (recursive-call recursive-call recursive-call) nil nil) ((acc y acc x y x) nil (cdr cdr cdr cdr) (cons cons cons) nil nil nil) ((x y acc x acc y acc) nil (car car car) nil nil nil nil) ((x x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))