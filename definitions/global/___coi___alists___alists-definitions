((/coi/alists/alists-definitions.lisp::assoc-transparent (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((alist) nil nil (implies) (recursive-call) nil nil) ((key value) nil (cdr) (equal equal) nil nil nil) ((key value alist) nil (caar cdar) nil nil nil nil) ((alist alist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::unified-domain-binding (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((domain) nil nil (recursive-call) (assoc-transparent) nil nil) ((alist alist) nil (car cdr cdr) nil nil nil nil) ((domain domain) nil nil (assoc) nil nil nil) ((alist) nil (car) nil nil nil nil) ((domain) nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::cross-domain-binding (nil nil nil nil (if) nil nil) ((t) nil (consp) (let) nil nil nil) ((domain (key (car domain))) nil nil (and) nil nil nil) (nil nil nil (implies) (recursive-call) nil nil) ((x y) nil (cdr) (list::memberp) (assoc-transparent) nil nil) ((key key y domain) nil (alist::keys cdr) nil nil nil nil) ((x) nil nil (assoc) nil nil nil)) (/coi/alists/alists-definitions.lisp::equiv-domain-binding (nil nil nil (and) nil nil nil) (nil nil nil nil (cross-domain-binding cross-domain-binding) nil nil) ((domain x y domain y x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::keys (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((alist) nil (consp) (cons cons) nil nil nil) ((nil) nil (car caar recursive-call recursive-call) nil nil nil nil) ((alist alist) nil (cdr cdr) nil nil nil nil) ((alist alist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::element (nil nil nil nil (if) nil nil) ((nil) nil (consp) nil (if) nil nil) ((y) nil nil (equal equal recursive-call) nil nil nil) ((a) nil (car caar cdr cdar cdr) nil nil nil nil) ((a y a y y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::assoc-equiv (nil nil nil nil (if) nil nil) ((t) nil (consp) (and) nil nil nil) ((list) nil nil (cons-equiv) (recursive-call) nil nil) ((x y) nil (cdr) (assoc assoc) nil nil nil) ((x y list) nil (car car) nil nil nil nil) ((list list) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::subdomain (nil nil nil (and) nil nil nil) (nil nil nil (subsetp) (assoc-equiv) nil nil) ((x y) nil (keys keys keys) nil nil nil nil) ((x x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::keyquiv (nil nil nil nil (and) nil nil) (nil nil nil (list::setequiv) (assoc-equiv assoc-equiv) nil nil) ((x y y x) nil (keys keys keys keys) nil nil nil nil) ((x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::setv (nil nil nil (cons) nil nil nil) ((alist) nil nil (cons) nil nil nil) ((a v) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::getv (nil nil (cdr) nil nil nil nil) (nil nil nil (assoc) nil nil nil) ((a alist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/alists/alists-definitions.lisp::clr (nil nil nil nil (if) nil nil) ((alist) nil (consp) nil (if) nil nil) ((alist) nil nil (equal recursive-call cons) nil nil nil) ((key key) nil (caar cdr car) (recursive-call) nil nil nil) ((alist alist alist key) nil (cdr) nil nil nil nil) ((alist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))