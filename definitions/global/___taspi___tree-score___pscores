((/taspi/tree-score/pscores.lisp::find-smallest-addition (nil nil nil nil (if) nil nil) ((nil) nil (atom) (min-nil-inf) nil nil nil) ((curList) nil nil (plus-nil-inf recursive-call) nil nil nil) (nil nil (car car cdr cdr) nil nil nil nil) ((curList translist curList translist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::add-min-cost-to-parent-scorelist (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((parent) nil nil (plus-nil-inf) (recursive-call) nil nil) ((child) nil (car cdr cdr) (find-smallest-addition) nil nil nil) ((parent child parent matrix) nil (cdar) nil nil nil nil) ((matrix) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::combine-scorelists-for-sequence (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((parent) nil nil nil (add-min-cost-to-parent-scorelist recursive-call) nil nil) ((matrix matrix) nil (car car cdr cdr) nil nil nil nil) ((parent child parent child) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::init-scores-char (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((matrix) nil nil (find-smallest-addition recursive-call) nil nil nil) ((child child) nil (cdar cdr) nil nil nil nil) ((matrix matrix) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::init-scorelist (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((child) nil nil (init-scores-char recursive-call) nil nil nil) ((matrix matrix) nil (car cdr) nil nil nil nil) ((child child) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::scorelist-listp (nil nil nil nil (if) nil nil) ((t) nil (atom) nil (and) nil nil) ((x) nil nil (sequence-scorelistp equal) (recursive-call) nil nil) ((alpha-len len len alpha-len) nil (car len cdr) nil nil nil nil) ((x x) nil (car) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::make-internal-score-list (nil nil nil nil (if) nil nil) ((parentSoFar) nil (atom) nil (recursive-call) nil nil) ((scorelists matrix) nil (cdr) nil (combine-scorelists-for-sequence) nil nil) ((scorelists parentSoFar matrix) nil (car) nil nil nil nil) ((scorelists) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::score-tree-and-sequences (nil nil nil nil (if) nil nil) ((flg) nil nil nil (if if) nil nil) ((nil) nil (atom atom) nil (make-leaf-score-list if) nil nil) ((tree cssl-map alpha-len nil tree sequences cssl-map matrix alpha-len tree) nil (cdr atom) (init-scorelist) (combine-scorelists-for-sequence) nil nil) ((matrix matrix) nil (cdr) (het) nil nil nil) ((tree sequences tree t sequences cssl-map matrix alpha-len nil sequences cssl-map matrix alpha-len t sequences cssl-map matrix alpha-len) nil (car cdr car) nil nil nil nil) ((tree tree tree) nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::length-n-list (nil nil nil nil (if) nil nil) ((t) nil (atom) (and) nil nil nil) ((l) nil nil (equal recursive-call) nil nil nil) ((n n) nil (len cdr) nil nil nil nil) ((l) nil (car) nil nil nil nil) ((l) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::pscore-tree (nil nil nil (let) nil nil nil) (((scorelist (score-tree-and-sequences t tree sequences cssl-map matrix (len matrix)))) nil (sum-minima) nil nil nil nil) ((scorelist) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-score/pscores.lisp::pscore-trees (nil nil nil nil (if) nil nil) ((nil) nil (atom) (cons) nil nil nil) ((trees) nil nil nil nil (pscore-tree recursive-call) nil) ((sequences cssl-map matrix sequences cssl-map matrix) nil (car cdr) nil nil nil nil) ((trees trees) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))