((/models/jvm/m1/defsys-utilities.lisp::name-locals (nil nil nil nil (cond) nil nil) (nil nil ((endp names) (equal (car names) (nth i locals)) t) nil nil nil nil) ((t nil) nil nil nil (recursive-call) nil nil) ((locals) nil (cdr) (+) nil nil nil) ((names i) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/defsys-utilities.lisp::name-locals-locals-gen-hint (nil nil nil nil (if) nil nil) ((junk) nil (endp) (recursive-call) nil nil nil) ((names) nil (cdr) (append) nil nil nil) ((names junk) nil (list) nil nil nil nil) (nil nil (car) nil nil nil nil) ((names) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/defsys-utilities.lisp::update-nth* (nil nil nil (cond) nil nil nil) (nil nil ((endp lst) t) nil nil nil nil) ((locals) nil nil nil (update-nth) nil nil) ((i) nil (car) nil (recursive-call) nil nil) ((lst locals) nil (cdr) (+) nil nil nil) ((i lst) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/defsys-utilities.lisp::number-of-explicit-elements (nil nil nil nil nil (cond) nil) (nil nil ((atom x) (quotep x) (eq (acl2::ffn-symb x) (quote cons)) t) nil nil nil nil) (nil (0 0) nil (+) (cond) nil nil) (nil (1) ((true-listp (car (cdr x))) (consp (car (cdr x))) t recursive-call) nil nil nil nil) (nil (0) (len) (+ acl2::fargn) nil nil nil) ((x) (1 2) (car recursive-call) nil nil nil nil) (nil nil (cdr kwote) nil nil nil nil)))