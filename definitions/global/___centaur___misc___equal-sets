((/centaur/misc/equal-sets.lisp::subsetp-equal-witness (nil nil nil nil (if) nil nil) ((nil) nil (atom) nil (if) nil nil) ((x) nil (car) (member-equal recursive-call) nil nil nil) ((y y x) nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/equal-sets.lisp::intersectp-equal-witness (nil nil nil nil (if) nil nil) ((nil) nil (atom) nil (if) nil nil) ((x) nil (car) (member-equal recursive-call) nil nil nil) ((y x y) nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/equal-sets.lisp::set-equivp (nil nil nil (and) nil nil nil) (nil nil nil (subsetp-equal subsetp-equal) nil nil nil) ((x y y x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/misc/equal-sets.lisp::set-unequal-witness (nil nil nil (cond) nil nil nil) (nil nil ((not (subsetp-equal x y)) (not (subsetp-equal y x))) nil nil nil nil) (nil nil nil (subsetp-equal-witness subsetp-equal-witness) nil nil nil) ((x y y x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))