((/hacking/hacker.lisp::transpose-keyword-args1 (nil nil nil nil (if) nil nil) (nil nil nil (recursive-call cons) (and) nil nil) ((args-rest kargs-sofar) nil (consp keywordp consp cddr) nil (list*) nil nil) ((args-rest args-rest kargs-sofar) nil (car cdr car cadr) nil nil nil nil) ((args-rest args-rest args-rest args-rest) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hacking/hacker.lisp::transpose-keyword-args (nil nil nil (transpose-keyword-args1) nil nil nil) ((args nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hacking/hacker.lisp::union-eq-with-top (nil nil nil nil (if) nil nil) ((t) nil nil (or union-eq) nil nil nil) ((a b) nil nil (eq eq) nil nil nil) ((a t b t) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hacking/hacker.lisp::add-temp-touchable-aliases (nil nil nil nil (if) nil nil) ((sofar) nil (null) (let) nil nil nil) ((spec) nil ((sym (if (consp spec) (car spec) spec))) nil (recursive-call) nil nil) ((rest fn-p) nil (rest) (union-eq-with-top) nil nil nil) ((sofar) nil nil nil (if cond) nil nil) ((nil) nil (consp cdr (eq sym :all) (eq sym :initial) t) nil nil nil nil) ((spec spec t) nil (list) nil (if) nil nil)) (/hacking/hacker.lisp::push-temp-touchables (nil nil nil nil (f-put-global) nil nil) ((state) nil (quote) (cons) nil nil nil) ((saved-temp-touchables) nil (@opt) (cons) nil nil nil) ((saved-temp-touchables) nil (@ @) nil nil nil nil) ((temp-touchable-vars temp-touchable-fns) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hacking/hacker.lisp::pop-temp-touchables (nil nil nil nil (if) nil nil) (nil nil nil (and let) (er) nil nil) (((result (car (@ saved-temp-touchables))) soft Stack of temp-touchables is empty.) nil (consp quote) (boundp-global pprogn) nil nil nil) ((state recursive-call) nil (quote @ value) nil (f-put-global) nil nil) ((saved-temp-touchables saved-temp-touchables state result) nil (quote cdr) nil nil nil nil) ((saved-temp-touchables) nil (@) nil nil nil nil) ((saved-temp-touchables) nil nil nil nil nil nil)) (/hacking/hacker.lisp::compute-progn-touchable-keyword1 (nil nil nil nil (cond) nil nil) (nil nil ((and (not vars) (consp form-lst) (eq :vars (car form-lst)) (consp (cdr form-lst))) (and (not fns) (consp form-lst) (eq :fns (car form-lst)) (consp (cdr form-lst))) t) nil nil nil nil) (nil nil (`) nil nil nil (recursive-call recursive-call)) ((bangp addp fns bangp addp vars) nil (cadr cddr cadr cddr) (progn!-with-bindings) nil nil nil) ((form-lst form-lst form-lst form-lst) nil ((temp-touchable-vars (add-temp-touchable-aliases (quote (, vars)) (, (if addp (quote (@ temp-touchable-vars)) (quote nil))) nil) set-temp-touchable-vars) ,) nil nil nil nil) (nil nil nil (temp-touchable-fns) (if) nil nil) ((set-temp-touchable-fns bangp) nil (` `) nil (add-temp-touchable-aliases) nil nil)) (/hacking/hacker.lisp::compute-progn-touchable-keyword (nil nil nil nil nil nil (compute-progn-touchable-keyword1)) ((bangp addp nil nil form-lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) nil (/hacking/hacker.lisp::program-mode-p (nil nil nil (eq) nil nil nil) (nil nil (quote) nil nil nil (getprop)) ((:program fn nil wrld) nil (quote quote) nil nil nil nil) ((symbol-class current-acl2-world) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hacking/hacker.lisp::program-mode-p-lst (nil nil nil (or) nil nil nil) (nil nil (endp) (and) nil nil nil) ((fn-lst) nil nil (program-mode-p recursive-call) nil nil nil) ((wrld wrld) nil (car cdr) nil nil nil nil) ((fn-lst fn-lst) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hacking/hacker.lisp::build-deflabels (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((names) nil (recursive-call) (list) nil nil nil) (nil nil (quote car cdr) nil nil nil nil) ((deflabel names names) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))