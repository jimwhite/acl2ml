((/rtl/rel7/lib/add.lisp::rc-carry (nil nil nil nil (if) nil nil) (nil (0) (zp) nil (lior) nil nil) ((k) (1) nil nil (land lior) nil nil) (nil (1 1) nil (bitn bitn) (land land) nil nil) ((x y) (1 1) (1- 1-) (bitn bitn) (recursive-call recursive-call) nil nil) ((k k x x y y x y) nil (1- 1- 1- 1-) nil nil nil nil) ((k k k k) nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::rc-sum (nil nil nil nil (if) nil nil) (nil (0) (zp) nil nil (cat) nil) ((k) (1) (1-) nil (lxor recursive-call) nil nil) ((x y k) (1) (1-) (bitn) (lxor) nil nil) ((x k) (1) (1-) (bitn) (rc-carry) nil nil) ((k y x y) nil (1- 1-) nil nil nil nil) ((k k) nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::gen (nil nil nil nil (if) nil nil) (nil (0) nil nil (and if) nil nil) (nil nil (natp natp) (>= = bitn) nil (recursive-call) nil) ((i j i j x i x y j) nil (1-) (bitn bitn) nil nil nil) ((x i y i i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::prop (nil nil nil nil (if) nil nil) (nil (1) nil nil (and if) nil nil) (nil (0) (natp natp) (>= =) nil (recursive-call) nil) ((i j i j x y j) nil (1-) (bitn bitn) nil nil nil) ((x i y i i) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lamt (nil nil nil nil (lxor) nil nil) ((a) nil (1+) (lnot) nil nil nil) ((b e) nil (1+) nil nil nil nil) ((e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lamg (nil nil nil nil (land) nil nil) ((a) nil (1+) (lnot) nil nil nil) ((b e) nil (1+) nil nil nil nil) ((e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lamz (nil nil nil (lnot) nil nil nil) (nil nil (1+) nil (lior) nil nil) ((a e) nil (1+) (lnot) nil nil nil) ((b e) nil (1+) nil nil nil nil) ((e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lam1 (nil nil nil nil (land) nil nil) (nil nil (1-) nil (bits land) nil nil) ((e e) (2) (1-) (lnot) (lamt bits) nil nil) ((a b e e) (1) (1- 1-) nil (lamg bits) nil nil) ((a b e e e) (0) nil (-) (lamz) nil nil) ((a b e e) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lam2 (nil nil nil nil (land) nil nil) (nil nil (1-) (lnot) (land) nil nil) ((e) nil (1- 1-) (lnot) (bits bits) nil nil) ((e e e) (2 1) (1- 1-) nil (lamt lamz bits) nil nil) ((a b e a b e e e) (0) nil (-) (lamz) nil nil) ((a b e e) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lam3 (nil nil nil nil (land) nil nil) (nil nil (1-) nil (bits land) nil nil) ((e e) (2) (1-) (lnot) (lamt bits) nil nil) ((a b e e) (1) (1- 1-) nil (lamz bits) nil nil) ((a b e e e) (0) nil (-) (lamg) nil nil) ((a b e e) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lam4 (nil nil nil nil (land) nil nil) (nil nil (1-) (lnot) (land) nil nil) ((e) nil (1- 1-) (lnot) (bits bits) nil nil) ((e e e) (2 1) (1- 1-) nil (lamt lamg bits) nil nil) ((a b e a b e e e) (0) nil (-) (lamg) nil nil) ((a b e e) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lam0 (nil nil nil nil (lior) nil nil) (nil nil (1-) nil (lam1 lior) nil nil) ((a b e e) nil (1-) nil (lam2 lior) nil nil) ((a b e e) nil (1-) nil (lam3 lam4) nil nil) ((a b e a b e e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/rtl/rel7/lib/add.lisp::lamb (nil nil nil (+) nil nil nil) (nil nil nil (* lnot) nil nil nil) (nil (2 1) nil (bitn) (lam0) nil nil) ((a b e) (0) nil nil (lamt) nil nil) ((a b e) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))