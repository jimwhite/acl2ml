((/defexec/other-apps/misc/stobjsim.lisp::symbol-binary-append (nil nil nil (intern) nil nil nil) ((ACL2) nil nil (string-append) nil nil nil) (nil nil (symbol-name symbol-name) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::get-fn (nil nil nil (symbol-append) nil nil nil) ((var) nil (quote) nil nil nil nil) ((r-) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::set-fn (nil nil nil (symbol-append) nil nil nil) ((var) nil (quote) nil nil nil nil) ((update-r-) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::next-var (nil nil nil (symbol-append) nil nil nil) ((var) nil (quote) nil nil nil nil) ((next-val-) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::get-fns (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars) nil (get-fn recursive-call) nil nil nil nil) (nil nil (first rest) nil nil nil nil) ((vars vars) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::reg-vars (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((regs) nil (first recursive-call) nil nil nil nil) (nil nil (first rest) nil nil nil nil) ((regs regs) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::var-binds (nil nil nil nil (if) nil nil) ((nil) nil (endp) (let) nil nil nil) ((vars (var (first vars))) nil nil (cons) nil nil nil) (nil nil (` recursive-call) nil nil nil nil) (nil nil ((, var) rest) nil nil nil nil) ((vars) nil ((, var)) nil nil nil nil) (nil nil (1-) nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::logic-fn (nil nil (`) nil nil nil nil) (nil nil nil nil (defun) nil nil) ((n) nil (,) nil (if) nil nil) ((reg) nil (zp ,) (let) nil nil nil) ((n init) nil (, ,) nil nil nil nil) ((nxt) nil (var-binds) nil nil nil nil) ((vars) nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::logic-fns (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((regs) nil nil (recursive-call) nil (logic-fn) nil) ((vars vars) nil (first second third rest) nil nil nil nil) ((regs) nil (first first first) nil nil nil nil) ((regs regs regs) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::sv-binds (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars) nil (recursive-call) (list) nil nil nil) (nil nil (first rest) (list) nil nil nil) ((vars vars) nil (get-fn quote) nil nil nil nil) ((sv) nil (first) nil nil nil nil) ((vars) nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::sv-nexts (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((regs) nil (recursive-call) (list) nil nil nil) (nil nil (next-var third rest) nil nil nil nil) ((regs) nil (first first) nil nil nil nil) ((regs) nil (first) nil nil nil nil) ((regs) nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::sv-updates (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars) nil (recursive-call) (list) nil nil nil) (nil nil (quote rest) nil (list) nil nil) ((sv vars) nil (set-fn next-var quote) nil nil nil nil) ((sv) nil (first first) nil nil nil nil) ((vars vars) nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::inv-unr (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars) nil (` recursive-call) nil nil nil nil) (nil nil (rest) (equal) nil nil nil) ((vars) nil ((, (get-fn (first vars))) (, (first vars))) nil nil nil nil) ((sv n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::lgc-fncls (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars) nil (recursive-call) (list) nil nil nil) (nil nil (first quote rest) nil nil nil nil) ((vars n vars) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::var-nils (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars nil) nil (recursive-call) nil nil nil nil) (nil nil (rest) nil nil nil nil) ((vars) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::get-fncls (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((vars) nil (recursive-call) (list) nil nil nil) (nil nil (get-fn quote rest) nil nil nil nil) ((sv vars) nil (first) nil nil nil nil) ((vars) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::init-upds (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((regs) nil (recursive-call) (list) nil nil nil) (nil nil (quote rest) nil (list) nil nil) ((sv regs) nil (set-fn second quote) nil nil nil nil) ((sv) nil (first first) nil nil nil nil) ((regs) nil (first) nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::open-init-thms (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((regs) nil (` recursive-call) nil nil nil nil) (nil nil (rest) (defthm) nil nil nil) ((regs) nil (,) (implies) nil nil nil) (nil nil (zp) (symbol-append equal) nil nil nil) ((n) nil (quote first (, (first (first regs))) ,) nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::open-step-thms (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((regs) nil (`) (recursive-call) nil nil nil) ((vars) nil (rest) (defthm) nil nil nil) ((regs) nil (,) (implies) nil nil nil) (nil nil (not) (symbol-append equal) nil nil nil) (nil nil (quote first zp (, (first (first regs)))) (let) nil nil nil)) nil nil nil (/defexec/other-apps/misc/stobjsim.lisp::instr (nil nil nil nil (if) nil nil) (nil nil (quote quote) (>) nil nil nil) ((bra mov) (0) (nfix) nil nil nil nil) ((pc) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::>n (nil nil nil (>) nil nil nil) (nil nil (nfix nfix) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/defexec/other-apps/misc/stobjsim.lisp::+n (nil nil nil (+) nil nil nil) (nil nil (nfix nfix) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))