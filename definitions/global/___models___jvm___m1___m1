((/models/jvm/m1/m1.lisp::push (nil nil nil (cons) nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::top (nil nil (car) nil nil nil nil) ((stack) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::pop (nil nil (cdr) nil nil nil nil) ((stack) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::nth (nil nil nil nil (if) nil nil) (nil nil (zp car) (recursive-call) nil nil nil) ((n list) nil (cdr) (-) nil nil nil) ((n list) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::update-nth (nil nil nil nil (if) nil nil) (nil nil (zp) (cons cons) nil nil nil) ((n v) nil (cdr car) nil (recursive-call) nil nil) ((list list v) nil (cdr) (-) nil nil nil) ((n list) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::make-state (nil nil nil (cons) nil nil nil) ((pc) nil nil (cons) nil nil nil) ((locals) nil nil (cons) nil nil nil) ((stack) nil nil (cons) nil nil nil) ((program nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::pc (nil nil nil (nth) nil nil nil) ((s) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::locals (nil nil nil (nth) nil nil nil) ((s) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::stack (nil nil nil (nth) nil nil nil) ((s) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::program (nil nil nil (nth) nil nil nil) ((s) (3) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::op-code (nil nil nil (nth) nil nil nil) ((inst) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::arg1 (nil nil nil (nth) nil nil nil) ((inst) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::arg2 (nil nil nil (nth) nil nil nil) ((inst) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::arg3 (nil nil nil (nth) nil nil nil) ((inst) (3) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::next-inst (nil nil nil (nth) nil nil nil) (nil nil (pc program) nil nil nil nil) ((s s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-ILOAD (nil nil nil nil nil (make-state) nil) (nil nil (locals program) (+ push) nil nil nil) ((s s) (1) (pc stack) (nth) nil nil nil) ((s s) nil (arg1 locals) nil nil nil nil) ((inst s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-ICONST (nil nil nil nil nil (make-state) nil) (nil nil (locals program) (+ push) nil nil nil) ((s s) (1) (pc arg1 stack) nil nil nil nil) ((s inst s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-IADD (nil nil nil nil nil (make-state) nil) (nil nil (locals program) (+ push) nil nil nil) ((s s) (1) (pc pop) (+) nil nil nil) ((s) nil (top top pop) nil nil nil nil) (nil nil (pop stack stack) nil nil nil nil) ((s s) nil (stack) nil nil nil nil) ((s) nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-ISUB (nil nil nil nil nil (make-state) nil) (nil nil (locals program) (+ push) nil nil nil) ((s s) (1) (pc pop) (-) nil nil nil) ((s) nil (top top pop) nil nil nil nil) (nil nil (pop stack stack) nil nil nil nil) ((s s) nil (stack) nil nil nil nil) ((s) nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-IMUL (nil nil nil nil nil (make-state) nil) (nil nil (locals program) (+ push) nil nil nil) ((s s) (1) (pc pop) (*) nil nil nil) ((s) nil (top top pop) nil nil nil nil) (nil nil (pop stack stack) nil nil nil nil) ((s s) nil (stack) nil nil nil nil) ((s) nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-ISTORE (nil nil nil nil nil (make-state) nil) (nil nil (pop program) (+) (update-nth) nil nil) ((s) (1) (pc arg1 top locals stack) nil nil nil nil) ((s inst s s) nil (stack) nil nil nil nil) ((s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-GOTO (nil nil nil nil nil (make-state) nil) (nil nil (locals stack program) (+) nil nil nil) ((s s s) nil (arg1 pc) nil nil nil nil) ((inst s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::execute-IFEQ (nil nil nil nil nil (make-state) nil) (nil nil (locals pop program) nil (if) nil nil) ((s s) nil (stack) (equal + +) nil nil nil) ((s) (0 1) (top arg1 pc pc) nil nil nil nil) ((inst s s) nil (stack) nil nil nil nil) ((s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::do-inst (nil nil nil nil (if) nil nil) (nil nil nil (equal execute-ILOAD) (if) nil nil) ((inst s) nil (op-code quote) (equal execute-ICONST) (if) nil nil) ((inst ILOAD inst s) nil (op-code quote) (equal execute-IADD) (if) nil nil) ((inst ICONST inst s) nil (op-code quote) (equal execute-ISUB) (if) nil nil) ((inst IADD inst s) nil (op-code quote) (equal execute-IMUL) (if) nil nil) ((inst ISUB inst s) nil (op-code quote) (equal execute-ISTORE) (if) nil nil)) (/models/jvm/m1/m1.lisp::step (nil nil nil (do-inst) nil nil nil) ((s) nil (next-inst) nil nil nil nil) ((s) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::haltedp (nil nil nil (equal) nil nil nil) (nil nil (next-inst quote) nil nil nil nil) ((s HALT) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::m1 (nil nil nil nil (if) nil nil) ((s) nil (zp) (recursive-call) nil nil nil) ((n) nil (step) (-) nil nil nil) ((s n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::popn (nil nil nil nil (if) nil nil) ((stk) nil (zp) (recursive-call) nil nil nil) ((n) nil (pop) (-) nil nil nil) ((n stk) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/m1.lisp::binary-clk+ (nil nil nil (+) nil nil nil) (nil nil (nfix nfix) nil nil nil nil) ((i j) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))