((/centaur/4v-sexpr/sexpr-fixpoint-spec.lisp::remove-assoc (nil nil nil nil (if) nil nil) ((nil) nil (atom) nil (if) nil nil) ((al) nil nil (or recursive-call cons) nil nil nil) ((key) nil (atom cdr car) (hons-equal recursive-call) nil nil nil) ((key al al key) nil (car caar cdr) nil nil nil nil) ((al al al) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/4v-sexpr/sexpr-fixpoint-spec.lisp::4v-sexpr-fixpoint-spec (nil nil nil nil (if) nil nil) ((nil) nil (atom) (b*) nil nil nil) ((ups) nil nil nil (acons) nil nil) ((name fixpoint rest-restrict) nil ((when (atom (car ups))) name upfn composed-with-rest fixpoint rest-restrict) nil nil nil nil) ((rest) nil (caar cdar) (4v-sexpr-restrict 4v-sexpr-restrict 4v-sexpr-restrict-alist) nil nil nil) ((ups ups upfn rest composed-with-rest rest) nil (` `) nil nil nil nil) ((((, name) x) ((, name) , fixpoint)) nil nil nil nil nil nil)) (/centaur/4v-sexpr/sexpr-fixpoint-spec.lisp::4v-sexpr-fixpointp-strong (nil nil nil nil (and) nil nil) (nil nil (not) (4v-sexpr-fixpointp keys-equiv) nil nil nil) ((ups fixpoint ups fixpoint) nil nil (intersectp-equal) nil nil nil) (nil nil (alist-keys 4v-sexpr-vars-list) nil nil nil nil) ((ups) nil (alist-vals) nil nil nil nil) ((fixpoint) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/4v-sexpr/sexpr-fixpoint-spec.lisp::4v-sexpr-fixpointp-alt1 (nil nil nil (4v-sexpr-alist-equiv) nil nil nil) ((fp) nil nil (4v-sexpr-restrict-alist) nil nil nil) ((ups fp) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))