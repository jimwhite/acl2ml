((/rtl/rel5/lib/openers.lisp::negate-event-control (nil nil nil nil (if) nil nil) (nil nil nil (equal list let*) nil nil nil) ((evctl evctl) nil (quote quote `) ((edge0 (car evctl))) nil nil nil) ((not) nil (even clk edge not) nil nil nil nil) ((n) nil (cadr) ((, edge)) nil (case) nil) ((evctl edge0) nil (posedge negedge otherwise (, clk) (, clk)) nil nil nil nil) ((n) nil (quote quote 1-) nil nil (er) nil)) (/rtl/rel5/lib/openers.lisp::negate-event-control-list (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((x) nil (negate-event-control recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))