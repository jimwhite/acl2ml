((/nonstd/arithmetic/binomial.lisp::choose (nil nil nil nil (if) nil nil) (nil (0) nil (/) nil (and) nil) (nil nil (integerp integerp factorial) (<= <= *) nil nil nil) ((k n k k n n) (0) (factorial factorial) nil nil nil nil) ((k) nil nil (-) nil nil nil) ((n k) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/arithmetic/binomial.lisp::choose-mk (nil nil nil nil (if) nil nil) (nil (0) nil (and) (if) nil nil) (nil nil (integerp integerp) (and +) (if) nil nil) ((k n) (1 0) nil (< < recursive-call recursive-call and) nil nil nil) ((k k n k) (0) (1- 1- 1-) (<= <=) nil nil nil) ((k n n k k n) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/arithmetic/binomial.lisp::binomial-expansion (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <=) (*) (recursive-call) nil) ((k n k k n x y n) (0) (1+) (choose expt expt) nil nil nil) ((k n x k y k) nil nil (-) nil nil nil) ((n k) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/arithmetic/binomial.lisp::binomial-expansion-times-x (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <=) (*) (recursive-call) nil) ((k n k k n x y n) (0) (1+) (choose expt expt) nil nil nil) ((k n x y k) nil (1+) (-) nil nil nil) ((k n k) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/arithmetic/binomial.lisp::binomial-expansion-times-y (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <=) (*) (recursive-call) nil) ((k n k k n x y n) (0) (1+) (choose expt expt) nil nil nil) ((k n x k y k) nil (1+) nil nil nil nil) (nil nil nil (-) nil nil nil) ((n k) nil nil nil nil nil nil)) (/nonstd/arithmetic/binomial.lisp::binomial-expansion-triangle (nil nil nil nil (if) nil nil) ((nil) nil nil (cons) nil (and) nil) (nil nil (integerp integerp) (<= <= cons) (*) nil nil) ((k n k k n) (0) nil (choose expt expt) (*) (recursive-call) nil) ((k n x y x y n) nil (1+ 1+) (- choose expt expt) nil nil nil) ((k n k k n x k y k) nil (1+) nil nil nil nil) (nil nil nil (-) nil nil nil)) (/nonstd/arithmetic/binomial.lisp::binomial-expansion-pascal-triangle (nil nil nil nil (if) nil nil) ((nil) nil nil nil (and if) nil nil) (nil nil (integerp integerp) (<= < cons) (if) nil nil) ((k n k k n nil) (0) (list) (cons =) (*) nil nil) ((k n) nil nil (choose expt expt) (* *) (recursive-call) nil) ((k n x y x y n) nil (1+ 1+) (- choose expt expt choose expt expt) nil nil nil) ((k n k n x y k k n x y) nil (1+ 1+ 1+) (- -) nil nil nil)) (/nonstd/arithmetic/binomial.lisp::n-expt (nil nil nil nil (if) nil nil) (nil (1) nil (and *) nil nil nil) ((x) nil (integerp) (< recursive-call) nil nil nil) ((n n x) (0) (1-) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))