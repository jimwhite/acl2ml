((/taspi/tree-generation/branch-and-bound/bandb.lisp::get-good-possibilities (nil nil nil nil (if) nil nil) ((acc) nil (consp) (let) nil nil nil) ((list (curScore (pscore-tree (car list) seq cssl-map matrix))) nil nil nil (if) nil nil) ((Error: Need rational score for trees in list in get-good-possibilities) nil (rationalp) nil (if) nil nil) ((curScore) nil nil (<=) nil nil nil) ((curScore score score seq cssl-map matrix score acc seq cssl-map matrix) nil (cdr cdr) (hons) nil nil nil) ((list acc list) nil (car) nil nil nil nil)) (/taspi/tree-generation/branch-and-bound/bandb.lisp::get-new-poss-list (nil nil nil nil (if) nil nil) ((acc) nil (consp) nil (if) nil nil) ((curList Error: Need unrooted trees in get-new-poss-list) nil nil (equal let) nil nil nil) (((newPieces (mv-root-list (orderly-addTaxa-unrooted taxon (car curList) tia) tia nil))) (3) (len) nil (if) nil nil) ((Error: Need trees built up to have appropriate taxa in
get-new-poss-list) nil (car) nil (tree-matches-sequences) nil nil) ((curlist nil newPieces seq taxon score seq cssl-map matrix tia) nil (cdr) nil nil nil nil) ((curList newPieces score acc seq cssl-map matrix) nil nil nil nil nil nil)) (/taspi/tree-generation/branch-and-bound/bandb.lisp::bandb-work (nil nil nil nil (if) nil nil) ((curList) nil (consp) (prog2$) nil nil nil) ((remTaxa) nil nil (cw) nil nil nil) ((adding taxa ~p0~% score seq cssl-map matrix tia) nil (car cdr) nil nil nil nil) ((remTaxa remTaxa curList score nil seq cssl-map matrix tia) nil (car) nil nil nil nil) ((remTaxa) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/taspi/tree-generation/branch-and-bound/bandb.lisp::bandb (nil nil nil (let) nil nil nil) (((taxa-List (get-taxa-from-sequences seq))) nil nil nil (if) nil nil) (nil nil nil (<= let) (if) nil nil) (nil (3) (len) ((tree1 (build-arbitraryTree taxa-List)) mv mv) (if tree-matches-sequences) nil nil) ((taxa-list t taxa-list seq taxa-list Error: this should never happen in bandb) nil (tree2 tree3 quote) (let mv) (and) (pscore-tree) nil) ((Error: arbitrary trees must match sequences in bandb taxa-list seq cssl-map matrix Error) nil (build-arbitraryTree1 build-unrooted-binary-tree quote) ((score1 (pscore-tree tree1 seq cssl-map matrix))) (tree-matches-sequences tree-matches-sequences tree-matches-sequences if) nil nil) ((taxa-List taxa-List t tree1 seq t tree2 seq t tree3 seq Error) nil (score2 score3) (let mv) (and) nil nil)) (/taspi/tree-generation/branch-and-bound/bandb.lisp::depth-work (nil nil nil nil (if) nil nil) (nil nil nil (equal) (if if) nil nil) ((flg) nil (quote consp consp) (mv) (if if if) nil nil) ((prune subs score acc remTaxa) nil nil (let mv equal let mv let mv) (tree-matches-sequences tree-matches-sequences) nil nil) ((t seq (subscore (pscore-tree (car subs) seq cssl-map matrix)) Error: need subtrees to match seqs in depth-work (newSubs (mv-root-list (orderly-addTaxa-unrooted (car remTaxa) curSub tia) tia nil)) Error: tree pieces must be unrooted in depth-work t curSub seq (finalscore (pscore-tree curSub seq cssl-map matrix)) Error: need curSub to match seq in second branch
                           of depth-work) (3) (car quote len quote quote) nil (if mv-let if) nil nil) ((subs Error curSub Error Error) nil (rationalp newScore rationalp) (mv mv mv) (if if) nil nil) ((subscore Error: pscore-tree result must be 
                                 rational in depth-work newtrees newSubs score acc seq cssl-map matrix tia newScore newtrees finalscore Error: pscore-tree result must be rational 
                             in second branch of depth-work) nil (quote quote cdr car quote) (<= < mv) (mv-let if) nil nil)) (/taspi/tree-generation/branch-and-bound/bandb.lisp::depth-bandb (nil nil nil (let) nil nil nil) (((taxa-List (get-taxa-from-sequences seq))) nil nil nil (if) nil nil) (nil nil nil (<= let) (if) nil nil) (nil (3) (len) ((tree1 (build-arbitraryTree taxa-List)) mv mv) (if tree-matches-sequences) nil nil) ((taxa-list t taxa-list seq taxa-list Error: this should never happen in depth-bandb) nil (tree2 tree3 quote) (let mv) (and) (pscore-tree) nil) ((Error: arbitrary trees must match sequences in depth-bandb taxa-list seq cssl-map matrix Error) nil (build-arbitraryTree1 build-unrooted-binary-tree quote) ((score1 (pscore-tree tree1 seq cssl-map matrix))) (tree-matches-sequences tree-matches-sequences tree-matches-sequences if) nil nil) ((taxa-List taxa-List t tree1 seq t tree2 seq t tree3 seq Error) nil (score2 score3) (let mv) (and) nil nil)))