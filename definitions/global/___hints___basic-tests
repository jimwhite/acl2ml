((/hints/basic-tests.lisp::rev (nil nil nil nil (if) nil nil) ((nil) nil (atom) (append) nil nil nil) ((x) nil (recursive-call list) nil nil nil nil) (nil nil (cdr car) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) nil (/hints/basic-tests.lisp::app (nil nil nil nil (if) nil nil) ((y) nil (consp) (cons) nil nil nil) ((x) nil (car) (recursive-call) nil nil nil) ((x y) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hints/basic-tests.lisp::rev0 (nil nil nil nil (if) nil nil) ((nil) nil (consp) (app) nil nil nil) ((x) nil (recursive-call) (cons) nil nil nil) ((nil) nil (cdr car) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hints/basic-tests.lisp::test-gen-checkpoint (nil nil (`) nil nil nil nil) (nil nil nil (:backtrack) nil nil nil) (nil nil (,@) (cond) nil nil nil) ((keyword-alist) nil ((eq processor (quote generalize-clause)) t) nil nil nil nil) (nil nil (value) (er-let*) nil nil nil) (((res (test-clause (car clause-list) state)) nil) nil (value) nil nil nil nil) (nil nil nil (cond) nil nil nil)) (/hints/basic-tests.lisp::test-gen-checkpoint2 (nil nil (`) nil nil nil nil) (nil nil (:backtrack) nil nil nil nil) (nil nil nil (cond) nil nil nil) (nil nil ((eq processor (quote generalize-clause)) t) nil nil nil nil) (nil nil (value) (er-let*) nil nil nil) (((res (test-clause (car clause-list) state)) nil) nil (value) nil nil nil nil) (nil nil nil (cond) nil nil nil)) (/hints/basic-tests.lisp::silly-expand-hint (nil nil (`) nil nil nil nil) (nil nil nil nil (:computed-hint-replacement) nil nil) ((t :expand (nth u v)) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hints/basic-tests.lisp::my-tester2 (nil nil (value) nil nil nil nil) ((*backtrack-failure*) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/hints/basic-tests.lisp::my-tester3 (nil nil (`) nil nil nil nil) (nil nil nil nil (:computed-hint-replacement) nil nil) ((t :backtrack) nil nil (cond) nil nil nil) (nil nil ((eq processor (quote fertilize-clause)) t) nil nil nil nil) (nil nil (value) (er-let*) nil nil nil) (((val (test-clause-list processor clause-list state)) nil) nil (value) nil nil nil nil) (nil nil nil (cond) nil nil nil)) (/hints/basic-tests.lisp::my-computed-hint (nil nil nil (pprogn) nil nil nil) (nil nil (value) nil nil nil (fms)) ((*** HELLO ***~% nil *standard-co* state nil nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))