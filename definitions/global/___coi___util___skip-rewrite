(nil (/coi/util/skip-rewrite.lisp::unhide-p (nil nil nil nil nil (and) nil) (nil nil (consp consp null) (equal) nil nil nil) ((term) nil (car quote cdr cddr) nil nil nil nil) ((term unhide term term) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/util/skip-rewrite.lisp::hide-p (nil nil nil nil nil (and) nil) (nil nil (consp consp null) (equal) nil nil nil) ((term) nil (car quote cdr cddr) nil nil nil nil) ((term hide term term) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/coi/util/skip-rewrite.lisp::beta-reduce-hide-wrapper (nil nil nil nil (if) nil nil) ((term) nil (hide-p) (let) nil nil nil) ((term (arg (cadr term))) nil nil nil (if) nil nil) ((term) nil (lambda-expr-p `) nil nil nil nil) ((arg) nil (hide) nil nil nil nil) (nil nil (,) nil nil nil nil) (nil nil (beta-reduce-lambda-expr) nil nil nil nil)) (/coi/util/skip-rewrite.lisp::unhide-hide-wrapper (nil nil nil nil (if) nil nil) ((term) nil (unhide-p) (let) nil nil nil) ((term (arg (cadr term))) nil nil nil (if) nil nil) ((term) nil (hide-p) (let) nil nil nil) ((arg (arg (cadr arg))) nil nil nil (if) nil nil) ((term) nil (lambda-expr-p `) nil nil nil nil) ((arg) nil (unhide) nil nil nil nil)))