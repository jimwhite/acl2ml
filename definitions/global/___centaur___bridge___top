((/centaur/bridge/top.lisp::fib (nil nil nil nil (cond) nil nil) (nil nil ((zp n) (= n 1) t) nil nil nil nil) (nil (1 1) nil (+) nil nil nil) (nil nil (recursive-call recursive-call) nil nil nil nil) (nil nil nil (- -) nil nil nil) ((n n) (1 2) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/bridge/top.lisp::sleep$ ((nil) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/bridge/top.lisp::sleepyprint (nil nil nil nil (if) nil nil) ((nil) nil (zp) nil (progn$) nil nil) ((n) nil (sleep$ recursive-call) (cw) nil nil nil) ((Sleepy print: ~x0~% n) (1) nil (-) nil nil nil) ((n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/bridge/top.lisp::test-imt (nil nil nil nil (in-main-thread) nil nil) (nil nil (cw cw) (+) nil nil nil) ((Hello  World~% x) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/centaur/bridge/top.lisp::test-timt (nil nil nil nil (try-in-main-thread) nil nil) (nil nil (cw cw) (+) nil nil nil) ((Hello  World~% x) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))