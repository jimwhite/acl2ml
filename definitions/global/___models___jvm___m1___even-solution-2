((/models/jvm/m1/even-solution-2.lisp::ok-inputs (nil nil (natp) nil nil nil nil) ((n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-2.lisp::theta (nil nil nil nil (if) nil nil) (nil (1 0) nil (equal) nil nil nil) (nil (0) nil (mod) nil nil nil) ((n) (2) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-2.lisp::helper (nil nil nil nil (if) nil nil) ((bit) nil (zp) (recursive-call) nil nil nil) ((n) nil nil (-) (if) nil nil) ((n) (1 1 0) nil (equal) nil nil nil) ((bit) (0) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-2.lisp::fn (nil nil nil (helper) nil nil nil) ((n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-2.lisp::loop-clk (nil nil nil nil (if) nil nil) (nil (3) (zp) nil (if) nil nil) ((n) nil nil (equal clk+ clk+) nil nil nil) ((bit) (0 11 12) nil (recursive-call recursive-call) nil nil nil) (nil (1 0) nil (- -) nil nil nil) ((n n) (1 1) nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-2.lisp::clk (nil nil nil (clk+) nil nil nil) (nil (2) nil (loop-clk) nil nil nil) ((n) (1) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/models/jvm/m1/even-solution-2.lisp::test (nil nil nil (let) nil nil nil) (((sf (m1 (make-state 0 (list n) nil *pi*) (clk n)))) nil nil nil (list) nil nil) (nil nil nil (list list) nil (list) nil) ((:pc :locals :stack) nil (pc quote next-inst locals stack) nil nil nil nil) ((sf --> sf sf sf) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))