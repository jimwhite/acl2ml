((/powerlists/prefix-sum.lisp::p-domain-list-p (nil nil nil nil (if) nil nil) (nil nil (powerlist-p domain-p) (and) nil nil nil) ((x x) nil (recursive-call recursive-call) nil nil nil nil) (nil nil (p-untie-l p-untie-r) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-first (nil nil nil nil (if) nil nil) ((x) nil (powerlist-p recursive-call) nil nil nil nil) ((x) nil (p-untie-l) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-last (nil nil nil nil (if) nil nil) ((x) nil (powerlist-p recursive-call) nil nil nil nil) ((x) nil (p-untie-r) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-prefix-sum-aux (nil nil nil nil (if) nil nil) (nil nil (powerlist-p) (p-tie bin-op) nil nil nil) ((x prefix x) nil nil (recursive-call recursive-call) nil nil nil) ((prefix) nil (p-untie-l p-last p-untie-r) nil nil nil nil) ((x x) nil nil (recursive-call) nil nil nil) ((prefix) nil (p-untie-l) nil nil nil nil) ((x) nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-shift (nil nil nil nil (if) nil nil) ((val) nil (powerlist-p) (p-tie) nil nil nil) ((x) nil nil (recursive-call recursive-call) nil nil nil) ((val) nil (p-untie-l p-last p-untie-r) nil nil nil nil) ((x x) nil (p-untie-l) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-prefix-sum-p-shift-induction-hint (nil nil nil nil (if) nil nil) (nil nil (powerlist-p) (list list) nil nil nil) ((x c1 c2) nil nil nil (recursive-call recursive-call) nil nil) ((c1 c2) nil (p-untie-l p-last p-last p-untie-r) nil nil nil nil) ((x x) nil (p-untie-l) (p-shift) nil nil nil) ((x) nil nil (bin-op p-prefix-sum-aux) nil nil nil) ((c1 c2) nil (p-untie-l) (bin-op) nil nil nil)) (/powerlists/prefix-sum.lisp::p-add-left-pairs (nil nil nil nil (if) nil nil) (nil nil (powerlist-p) (bin-op) (if) nil nil) ((x val x) nil (powerlist-p) (p-tie bin-op) nil nil nil) ((val) nil (p-untie-l p-untie-l) (recursive-call recursive-call) nil nil nil) ((x val x) nil (p-untie-l p-last p-untie-r) nil nil nil nil) ((x x) nil (p-untie-l) nil nil nil nil) ((x) nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-add-right-pairs (nil nil nil nil (if) nil nil) ((x) nil (powerlist-p) nil (if) nil nil) ((x) nil (powerlist-p) (p-tie bin-op) nil nil nil) (nil nil (p-untie-l recursive-call recursive-call p-untie-l p-untie-r) nil nil nil nil) ((x x x) nil (p-untie-l p-untie-r) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::prefix-sum-p-add-right-pairs-induction-hint (nil nil nil nil (if) nil nil) ((x) nil (powerlist-p) nil (if) nil nil) ((x val) nil (powerlist-p) (list) nil nil nil) (nil nil (p-untie-l) (recursive-call recursive-call) nil nil nil) ((x val) nil (p-untie-l p-last p-untie-r) nil nil nil nil) ((x x) nil nil (p-prefix-sum-aux) nil nil nil) ((val) nil (p-untie-l) nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-star (nil nil nil nil (if) nil nil) ((left-zero) nil (powerlist-p) (p-zip) nil nil nil) ((x) nil (recursive-call p-unzip-l) nil nil nil nil) ((x) nil (p-unzip-r) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-add (nil nil nil nil (if) nil nil) (nil nil (powerlist-p) (p-zip bin-op) nil nil nil) ((x x y) nil nil (recursive-call recursive-call) nil nil nil) (nil nil (p-unzip-l p-unzip-l p-unzip-r p-unzip-r) nil nil nil nil) ((x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-measure (nil nil nil nil (if) nil nil) (nil (1) (powerlist-p) (+) nil nil nil) ((x) nil (recursive-call recursive-call) nil nil nil nil) (nil nil (p-unzip-l p-unzip-r) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-simple-prefix-sum (nil nil nil nil (if) nil nil) ((x) nil (powerlist-p) (let) nil nil nil) ((x (y (p-add (p-star x) x))) nil nil (p-zip) nil nil nil) (nil nil (recursive-call recursive-call) nil nil nil nil) (nil nil (p-unzip-l p-unzip-r) nil nil nil nil) ((y y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-add-tie (nil nil nil nil (if) nil nil) (nil nil (powerlist-p) (p-tie bin-op) nil nil nil) ((x x y) nil nil (recursive-call recursive-call) nil nil nil) (nil nil (p-untie-l p-untie-l p-untie-r p-untie-r) nil nil nil nil) ((x y x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/powerlists/prefix-sum.lisp::p-lf-prefix-sum (nil nil nil nil (if) nil nil) ((x) nil (powerlist-p) (let) nil nil nil) ((x (y (p-lf-prefix-sum (p-add (p-unzip-l x) (p-unzip-r x))))) nil nil (p-zip) nil nil nil) ((y) nil nil (p-add) nil nil nil) (nil nil (p-star p-unzip-l) nil nil nil nil) ((y x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))