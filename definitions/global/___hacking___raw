((/hacking/raw.lisp::raw-only-definitions1 (nil nil nil nil (if) nil nil) (nil nil (endp) (let* let) nil nil nil) ((revremforms) nil ((fresh-no-dups (remove-duplicates-eql fresh)) (form (car revremforms))) nil (if) nil (cond)) ((main) nil (main rst (and (consp form) (eq (quote defun) (car form)) (>= (len form) 4) (symbolp (cadr form))) (and (consp form) (eq (quote defmacro) (car form)) (>= (len form) 4) (symbolp (cadr form))) (and (consp form) (or (eq (quote defvar) (car form)) (eq (quote defparameter) (car form))) (>= (len form) 2) (symbolp (cadr form))) (and (consp form) (eq (quote defstruct) (car form)) (>= (len form) 2)) t) (equal let) nil nil nil) ((fresh-no-dups fresh (dups (duplicates fresh))) nil (` ` cdr `) (let) nil nil nil) ((revremforms rst all-forms save-macros save-vars rst all-forms save-fns save-vars rst all-forms compile save-fns save-macros (name-and-fns (acl2-hacker::defstruct-name-and-fns form))) nil (progn!) (progn cons cons cons cons cons cons cons cons) (if) nil nil) ((:compile :fresh :save-fns :save-macros :save-vars form compile fresh save-fns form compile fresh save-macros fresh save-vars) nil (, , , , , , value-triple , cadr cadr cadr cadr cadr cadr consp `) nil nil (er) nil)))