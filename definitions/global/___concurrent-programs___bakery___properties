((/concurrent-programs/bakery/properties.lisp::map-status (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (->) nil nil) ((keys) nil (first) (recursive-call >_) nil nil nil) ((procs keys :status) nil (rest status) nil nil nil nil) ((keys) nil nil (<-) nil nil nil) ((procs) nil (first) nil nil nil nil) ((keys) nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::rep-b-c (nil nil nil (let) nil nil nil) (((procs (procs st))) nil nil nil nil nil nil) ((:procs :bucket :queue :go) nil (bucket queue get-go) (map-status) nil nil nil) ((procs st st st) nil (keys) nil nil nil nil) ((procs) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) nil (/concurrent-programs/bakery/properties.lisp::fair-pick-b-c (nil nil nil (fair-select) nil nil nil) ((X) nil (env) nil nil nil nil) ((st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::wait-status (nil nil nil (equal) nil nil nil) (nil nil (status quote) nil nil nil nil) ((p wait) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::go-status (nil nil nil (equal) nil nil nil) (nil nil (status quote) nil nil nil nil) ((p go) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::idle-status (nil nil nil (equal) nil nil nil) (nil nil (status quote) nil nil nil nil) ((p idle) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::interested-status (nil nil nil (equal) nil nil nil) (nil nil (status quote) nil nil nil nil) ((p interested) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::legal-loc (nil nil nil (let) nil nil nil) (((loc (loc p))) nil nil nil (and) nil nil) (nil nil (integerp) (>= <=) nil nil nil) ((loc loc loc) (0 9) nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::extract-indices-with-pos (nil nil nil nil (if) nil nil) ((nil) nil (endp) (let) nil nil nil) ((queue (rest-ind (extract-indices-with-pos procs (rest queue)))) nil nil nil (if) nil nil) ((rest-ind) nil (pos) (cons) nil nil nil) ((rest-ind) nil (first) (<-) nil nil nil) ((procs queue) nil (first) nil nil nil nil) ((queue) nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::pos=1+temp-aux (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((queue) nil nil (equal recursive-call) nil nil nil) ((procs) nil (pos 1+ rest) nil nil nil nil) ((queue) nil (temp) (<-) nil nil nil) ((procs) nil (first) (<-) nil nil nil) ((queue procs) nil (first) nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::pos=1+temp (nil nil nil (pos=1+temp-aux) nil nil nil) ((procs) nil nil (extract-indices-with-pos) nil nil nil) ((procs queue) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::lexicographic-temp (nil nil nil nil (if) nil nil) ((T) nil (endp) nil (if) nil nil) ((queue T) nil (endp) (and) nil nil nil) (nil nil (rest) (recursive-call) nil (lex<) nil) ((queue procs) nil (temp first temp second rest) nil nil nil nil) ((queue queue queue) nil nil (<- <-) nil nil nil) ((procs procs) nil (first second) nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::suff-proc (nil nil nil (let) nil nil nil) (((p (<- procs in))) nil nil nil nil nil nil) (nil nil (loc 0 1 2 3 4 5 6 7 8 9 t) nil nil nil nil) ((p t nil) nil (not idle-status) (memberp and) (and) (and and) (and)) ((p in queue) nil (interested-status natp not wait-status not not pos consp pos not not go-status not consp) (memberp <= implies implies memberp memberp implies memberp memberp memberp memberp) nil nil nil) ((in queue p max in queue p in queue p in queue p in queue p queue) nil (temp temp not choosing choosing endp choosing current keys indices choosing choosing current keys choosing) (memberp equal memberp and) nil nil nil) ((p p in queue max in bucket p p p p procs p p p p procs p) nil (temp indices consp) (equal equal) nil nil nil)) (/concurrent-programs/bakery/properties.lisp::suff-b-c (nil nil nil (let*) nil nil nil) (nil nil nil nil nil ((procs (procs st))) nil) (nil nil (proc bucket queue max natp) (disjoint pos=1+temp lexicographic-temp my-subsetp implies implies) nil nil nil) ((bucket queue max procs queue procs queue queue proc) nil (bucket queue maxval keys consp) (<-) nil nil (suff-proc suff-proc)) ((procs in st st st procs queue procs bucket queue max procs in bucket queue max) nil (car) nil nil nil nil) ((queue) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::fair-suff-b-c (nil nil nil (and) nil nil nil) (nil nil nil (suff-b-c my-subsetp) nil nil nil) ((st) nil (keys select-que) (fair-select) nil nil nil) ((X) nil (env procs env) nil nil nil nil) ((st st st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::commit-proc (nil nil nil nil nil (or) nil) (nil nil nil (equal equal equal and) nil nil nil) (nil (1 3 9) (loc loc loc endp) (equal) nil nil nil) ((p p p) (6) (loc indices) nil nil nil nil) ((p p) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::commit-b-c (nil nil nil (let) nil nil nil) (((proc (<- (procs st) in))) nil nil (implies) nil nil nil) ((proc) nil (commit-proc) nil nil nil nil) ((proc) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::status-list (nil nil nil nil (if) nil nil) ((nil) nil (endp) (cons) nil nil nil) ((keys) nil (status) (recursive-call) nil nil nil) ((r) nil (rest) (<-) nil nil nil) ((r keys) nil (first) nil nil nil nil) ((keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::label (nil nil (get-go) nil nil nil nil) ((st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::inv-p-p (nil nil nil (let*) nil nil nil) (nil nil ((p (<- procs in))) nil nil nil nil) (nil nil (curr loc 0 1 2 3 4 5 6 7 8 9 t) nil nil nil nil) ((p nil) nil nil (<-) nil nil (and and and)) ((procs) nil (current idle-status not not not not idle-status not choosing not not interested-status natp choosing not natp choosing pos interested-status wait-status choosing natp not wait-status natp not wait-status natp not wait-status natp not consp wait-status natp not consp go-status not consp not) (implies implies <= <= equal implies implies equal memberp equal memberp equal memberp my-subsetp my-subsetp equal my-subsetp my-subsetp equal memberp equal equal implies my-subsetp my-subsetp memberp equal equal) nil nil nil) ((p p p p p p max max p p p p p in queue p in queue p in queue p in queue p in queue p queue in) nil (choosing pos pos temp pos not temp temp temp pos 1+ not pos pos 1+ pos pos 1+ choosing pos pos 1+ choosing indices keys indices pos pos 1+ choosing indices indices indices keys current first pos pos 1+ choosing indices current first choosing not indices indices keys choosing pos 1+ first) (memberp memberp memberp memberp memberp equal memberp memberp equal memberp memberp previous previous previous memberp) nil nil nil) ((p p in queue in bucket p in queue in bucket p p in queue max in bucket p p p p in queue max in bucket p p in bucket p p p p p p p procs queue in p p p p p queue in p p procs p p p p p p curr queue in p p procs p p in bucket queue) nil (temp temp temp temp temp temp temp indices temp indices temp) (equal equal memberp) nil nil nil)) (/concurrent-programs/bakery/properties.lisp::inv-p-keys (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((keys) nil nil nil nil nil (inv-p-p recursive-call)) ((procs bucket queue max procs bucket queue max) nil (first rest) nil nil nil nil) ((keys keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::choosing-pos (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((queue) nil nil (implies recursive-call) nil nil nil) ((procs) nil (not choosing rest) nil nil nil nil) ((queue) nil (natp) (<-) nil nil nil) ((procs) nil (pos first) nil nil nil nil) ((queue) nil nil (<-) nil nil nil)) (/concurrent-programs/bakery/properties.lisp::choosing-bucket (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((bucket) nil (choosing) (recursive-call) nil nil nil) ((procs) nil (rest) (<-) nil nil nil) ((procs bucket) nil (first) nil nil nil nil) ((bucket) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::q<max (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((queue) nil nil (<) (recursive-call) nil nil) ((max procs max) nil (temp rest) nil nil nil nil) ((queue) nil nil (<-) nil nil nil) ((procs) nil (first) nil nil nil nil) ((queue) nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::b=max (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((bucket) nil nil (equal) (recursive-call) nil nil) ((max procs max) nil (temp rest) nil nil nil nil) ((bucket) nil nil (<-) nil nil nil) ((procs) nil (first) nil nil nil nil) ((bucket) nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::legal-status (nil nil nil nil nil (or) nil) (nil nil (idle-status interested-status wait-status go-status) nil nil nil nil) ((p p p p) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::legal-status-listp (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((keys) nil (legal-status) (recursive-call) nil nil nil) ((procs) nil (rest) (<-) nil nil nil) ((procs keys) nil (first) nil nil nil nil) ((keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::legal-pos (nil nil nil (or) nil nil nil) (nil nil (legal-loc not) nil nil nil nil) ((p) nil (pos) nil nil nil nil) ((p) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::legal-pos-listp (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((keys) nil (legal-pos) (recursive-call) nil nil nil) ((procs) nil (rest) (<-) nil nil nil) ((procs keys) nil (first) nil nil nil nil) ((keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::inv-b-c (nil nil nil (let*) nil nil nil) (nil nil nil nil nil ((procs (procs st))) nil) (nil nil (keys bucket queue max natp uniquep orderedp) (lexicographic-temp choosing-bucket choosing-pos my-subsetp my-subsetp disjoint legal-status-listp) (b=max q<max) nil (inv-p-keys)) ((max queue bucket procs bucket max procs queue max procs queue procs bucket procs queue queue keys bucket keys bucket queue keys procs procs keys bucket queue max) nil (keys bucket queue maxval) nil nil nil nil) ((procs st st st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::fair-inv-b-c (nil nil nil (and) nil nil nil) (nil nil (inv-b-c) (my-subsetp) nil nil nil) ((st) nil (keys select-que) nil nil nil nil) (nil nil (procs env) nil nil nil nil) ((st st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::inv-p-p-c-s (nil nil nil (let) nil nil nil) (((p (<- procs in))) nil nil nil nil nil nil) (nil nil (status idle interested wait go t) nil nil nil nil) ((p nil) nil nil (and and and) (and) nil nil) (nil nil (not not not not not) (or memberp equal equal) nil nil nil) ((in queue in go in) nil (car) (equal memberp memberp equal memberp memberp equal) nil nil nil) ((in go in queue in bucket in go in bucket in queue in go queue) nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::inv-p-keys-c-s (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((keys) nil nil nil nil nil (inv-p-p-c-s recursive-call)) ((procs bucket queue go procs bucket queue go) nil (first rest) nil nil nil nil) ((keys keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::go-procs (nil nil nil (implies) nil nil nil) ((go) nil nil (equal) nil nil nil) (nil nil (status quote) nil nil nil nil) ((go) nil nil (<-) nil nil nil) ((procs go) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::go-queue (nil nil nil (implies) nil nil nil) ((go) nil nil (equal) nil nil nil) ((go) nil (car) nil nil nil nil) ((queue) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::keys-not-nil (nil nil nil nil (if) nil nil) ((T) nil (endp) (and) nil nil nil) ((keys) nil (first recursive-call) nil nil nil nil) ((keys) nil (rest) nil nil nil nil) ((keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::inv-c-s (nil nil nil (let*) nil nil nil) (nil nil nil nil nil ((procs (procs st))) nil) (nil nil (keys bucket queue go keys-not-nil orderedp uniquep) (go-queue go-procs disjoint my-subsetp my-subsetp) nil nil (inv-p-keys-c-s)) ((procs keys bucket queue go go queue go procs keys bucket queue bucket queue bucket keys queue keys) nil (keys bucket queue get-go) nil nil nil nil) ((procs st st st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::suff-proc-c-s (nil nil nil (let) nil nil nil) (((p (<- procs in))) nil nil nil nil nil (case)) (nil nil (status wait (idle interested) go t) nil nil nil nil) ((p T nil) nil nil (or equal) nil nil nil) ((go in) nil nil (memberp memberp) nil nil nil) ((in queue in bucket) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::go-keys (nil nil nil (implies) nil nil nil) ((go) nil nil (memberp) nil nil nil) ((go keys) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::suff-c-s (nil nil nil (let*) nil nil nil) (nil nil nil nil nil (and) ((procs (procs st)))) (nil nil (keys p bucket go queue) (go-queue go-procs go-keys implies) nil nil nil) ((go queue go procs go keys p) nil (keys bucket get-go queue) (<-) nil nil (suff-proc-c-s)) ((procs in st st st procs in bucket queue go) nil (procs) nil nil nil nil) ((st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::commit-proc-c-s (nil nil nil (or) nil nil nil) (nil nil nil (and equal) nil nil nil) (nil nil (status quote) (equal equal) nil nil nil) ((in p go) nil (status quote first) nil nil nil nil) ((p wait queue) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::commit-c-s (nil nil nil (let*) nil nil nil) (nil nil ((p (<- (procs st) in))) (implies) nil nil nil) ((p) nil (queue) nil (commit-proc-c-s) nil nil) ((p in queue) nil (queue) nil nil nil nil) ((st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/concurrent-programs/bakery/properties.lisp::rep-c-s (nil nil nil nil nil (>_) nil) ((:procs :go) nil (keys get-go) nil nil nil nil) ((st) nil (procs) nil nil nil nil) ((st) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))