((/nonstd/misc/hons-tests.lisp::fib (nil nil nil nil nil (mbe) nil) ((:logic :exec) nil nil nil (cond if) nil nil) ((x) nil ((zp x) (= x 1) t) (< +) nil nil nil) ((x) (0 1 2) (recursive-call recursive-call) (+) nil nil nil) (nil nil (recursive-call recursive-call) (- -) nil nil nil) ((x x) (1 2) nil (- -) nil nil nil) ((x x) (1 2) nil nil nil nil nil)) (/nonstd/misc/hons-tests.lisp::build-tree (nil nil nil nil (if) nil nil) ((nil) nil (posp) (hons) nil nil nil) ((n) nil (recursive-call recursive-call) nil nil nil nil) (nil nil (1- 1-) nil nil nil nil) ((n n) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/hons-tests.lisp::lots (nil nil nil (let*) nil nil nil) (((lots-of-numbers (make-list-of-numbers n))) nil nil (equal) nil nil nil) (nil nil nil (+) (+) nil nil) (nil (2) (len len len) (*) nil nil nil) ((n) (2) nil (hons-intersection hons-union hons-set-diff) nil nil nil) ((lots-of-numbers lots-of-numbers lots-of-numbers lots-of-numbers lots-of-numbers lots-of-numbers) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))