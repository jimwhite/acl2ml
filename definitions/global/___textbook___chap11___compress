((/textbook/chap11/compress.lisp::compress (nil nil nil nil (cond) nil nil) (nil nil ((or (endp x) (endp (cdr x))) (equal (car x) (cadr x)) t) nil nil nil nil) ((x) nil (recursive-call) (cons) nil nil nil) (nil nil (cdr car recursive-call) nil nil nil nil) ((x x) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::mem (nil nil nil nil (if) nil nil) ((nil) nil (endp) nil (if) nil nil) ((x t) nil nil (equal recursive-call) nil nil nil) ((e e) nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::no-dupls-p (nil nil nil nil (cond) nil nil) (nil nil ((endp x) (mem (car x) (cdr x)) t) nil nil nil nil) ((t nil) nil (recursive-call) nil nil nil nil) (nil nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::orderedp (nil nil nil (cond) nil nil nil) (nil nil ((atom (cdr x)) t) nil nil nil nil) ((t) nil nil (and) nil nil nil) (nil nil (recursive-call) (<=) nil nil nil) (nil nil (car cadr cdr) nil nil nil nil) ((x x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::number-listp (nil nil nil nil (if) nil nil) ((t) nil (endp) (and) nil nil nil) ((x) nil (acl2-numberp recursive-call) nil nil nil nil) (nil nil (car cdr) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::same-compress (nil nil nil (equal) nil nil nil) (nil nil (compress compress) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::app (nil nil nil nil (if) nil nil) ((y) nil (endp) (cons) nil nil nil) ((x) nil (car) (recursive-call) nil nil nil) ((x y) nil (cdr) nil nil nil nil) ((x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/textbook/chap11/compress.lisp::rev (nil nil nil nil (if) nil nil) ((nil) nil (endp) (app) nil nil nil) ((x) nil (recursive-call list) nil nil nil nil) (nil nil (cdr car) nil nil nil nil) ((x x) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))