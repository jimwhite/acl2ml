((/nonstd/misc/equal-by-g-help.lisp::g-badguy (nil nil nil nil nil nil nil) (nil nil ((atom x) (atom y) (equal (car x) (car y)) (<< (caar x) (caar y)) (equal (caar x) (caar y)) t) nil nil nil nil) (nil nil nil (cons recursive-call cons cons cons) (if) nil nil) ((nil :extra-in-x :extra-in-x :mismatch :extra-in-y) nil (atom car cdr cdr car car car) (cons) nil nil nil) ((y :extra-in-y x x y x x y) nil (car) nil nil nil nil) ((y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil)) (/nonstd/misc/equal-by-g-help.lisp::g-worseguy (nil nil nil (g-badguy) nil nil nil) (nil nil (acl2->rcd acl2->rcd) nil nil nil nil) ((x y) nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil) (nil nil nil nil nil nil nil)))